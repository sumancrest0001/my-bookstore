{"ast":null,"code":"var _jsxFileName = \"/home/suman/react-projects/redux/my-bookstore/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HomePage from './container/HomePage/HomePage';\nimport AdminMainContainer from './container/AdminContainers/AdminMainContainer/AdminMainContainer';\nimport Header from './components/Header/Header';\nimport Signin from './components/Auth/Signin/Signin';\nimport Signup from './components/Auth/Signup/Signup';\nimport Logout from './components/Auth/Logout/Logout';\nimport CheckoutPage from './components/CheckoutPage/CheckoutPage';\nimport { auth, createUserProfileDocument } from './firebase/index';\nimport { setCurrentUser } from './redux/actions/user.actions';\nimport { getBooks } from './redux/actions/book.actions';\nimport './App.scss';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unSubscribeFromAuth = null;\n    this.unsubscribeFromSnapShot = null;\n\n    this.fetchData = async () => {\n      const {\n        storeBooks\n      } = this.props;\n      const booksRef = firestore.collection('books').orderBy('createdAt', 'desc');\n      const availableBooks = [];\n      this.unsubscribeFromSnapShot = booksRef.onSnapshot(snapShot => {\n        snapShot.forEach(doc => availableBooks.push({ ...doc.data(),\n          id: doc.id\n        }));\n        storeBooks(availableBooks);\n      });\n    };\n\n    this.checkCurrentUser = () => {\n      const {\n        setCurrentUser\n      } = this.props;\n      this.unSubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n        if (userAuth) {\n          const userRef = await createUserProfileDocument(userAuth);\n          userRef.onSnapshot(snapShot => {\n            const result = snapShot.data().email === 'suman.crest0001@gmail.com';\n            const currentUser = {\n              id: snapShot.id,\n              ...snapShot.data()\n            };\n            setCurrentUser(currentUser, result);\n          });\n        } else {\n          setCurrentUser(userAuth, false);\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.checkCurrentUser();\n  }\n\n  componentWillUnmount() {\n    this.unSubscribeFromAuth();\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  render() {\n    const {\n      adminStatus,\n      books\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      hideNewBook: adminStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/signin\",\n      exact: true,\n      component: Signin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      exact: true,\n      component: Signup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/logout\",\n      exact: true,\n      component: Logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }), adminStatus ? /*#__PURE__*/React.createElement(Route, {\n      path: \"/auth\",\n      component: AdminMainContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 27\n      }\n    }) : null, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => /*#__PURE__*/React.createElement(HomePage, {\n        availableBooks: books,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 47\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  adminStatus: state.user.admin,\n  books: state.book.books\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: (user, admin) => dispatch(setCurrentUser(user, admin)),\n  storeBooks: books => dispatch(getBooks(books))\n});\n\nApp.propTypes = {\n  setCurrentUser: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/src/App.js"],"names":["React","Component","Route","Switch","connect","PropTypes","HomePage","AdminMainContainer","Header","Signin","Signup","Logout","CheckoutPage","auth","createUserProfileDocument","setCurrentUser","getBooks","App","unSubscribeFromAuth","unsubscribeFromSnapShot","fetchData","storeBooks","props","booksRef","firestore","collection","orderBy","availableBooks","onSnapshot","snapShot","forEach","doc","push","data","id","checkCurrentUser","onAuthStateChanged","userAuth","userRef","result","email","currentUser","componentDidMount","componentWillUnmount","render","adminStatus","books","mapStateToProps","state","user","admin","book","mapDispatchToProps","dispatch","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Route, Switch,\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HomePage from './container/HomePage/HomePage';\nimport AdminMainContainer from './container/AdminContainers/AdminMainContainer/AdminMainContainer';\nimport Header from './components/Header/Header';\nimport Signin from './components/Auth/Signin/Signin';\nimport Signup from './components/Auth/Signup/Signup';\nimport Logout from './components/Auth/Logout/Logout';\nimport CheckoutPage from './components/CheckoutPage/CheckoutPage';\nimport { auth, createUserProfileDocument } from './firebase/index';\nimport { setCurrentUser } from './redux/actions/user.actions';\nimport { getBooks } from './redux/actions/book.actions';\nimport './App.scss';\n\nclass App extends Component {\n  unSubscribeFromAuth = null;\n\n  unsubscribeFromSnapShot = null;\n\n  componentDidMount() {\n    this.checkCurrentUser();\n  }\n\n  componentWillUnmount() {\n    this.unSubscribeFromAuth();\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  fetchData = async () => {\n    const { storeBooks } = this.props;\n    const booksRef = firestore.collection('books').orderBy('createdAt', 'desc');\n    const availableBooks = [];\n    this.unsubscribeFromSnapShot = booksRef.onSnapshot(snapShot => {\n      snapShot.forEach(doc => availableBooks.push({ ...doc.data(), id: doc.id }));\n      storeBooks(availableBooks);\n    });\n  }\n\n\n  checkCurrentUser = () => {\n    const { setCurrentUser } = this.props;\n    this.unSubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          const result = snapShot.data().email === 'suman.crest0001@gmail.com';\n          const currentUser = {\n            id: snapShot.id,\n            ...snapShot.data(),\n          };\n          setCurrentUser(currentUser, result);\n        });\n      } else {\n        setCurrentUser(userAuth, false);\n      }\n    });\n  }\n\n  render() {\n    const { adminStatus, books } = this.props;\n    return (\n      <div className=\"App\">\n        <Header hideNewBook={adminStatus} />\n        <Switch>\n          <Route path=\"/signin\" exact component={Signin} />\n          <Route path=\"/register\" exact component={Signup} />\n          <Route path=\"/logout\" exact component={Logout} />\n          {\n            adminStatus ? <Route path=\"/auth\" component={AdminMainContainer} /> : null\n          }\n          <Route path=\"/\" exact render={() => <HomePage availableBooks={books} />} />\n          <Route path=\"/checkout\" component={CheckoutPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  adminStatus: state.user.admin,\n  books: state.book.books,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: (user, admin) => dispatch(setCurrentUser(user, admin)),\n  storeBooks: books => (dispatch(getBooks(books))),\n});\n\nApp.propTypes = {\n  setCurrentUser: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}