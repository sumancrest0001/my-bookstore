{"ast":null,"code":"var _jsxFileName = \"/home/suman/react-projects/redux/my-bookstore/client/src/components/BookDetails/BookDetails.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../CustomButton/CustomButton';\nimport './BookDetails.scss';\nimport book1 from '../../images/book1.jpg';\nimport { bookFilter } from '../../redux/actions/book.actions';\n\nclass BookDetails extends Component {\n  componentDidMount() {\n    const {\n      match,\n      filterSelectedBook,\n      selectedBook\n    } = this.props;\n    filterSelectedBook(match.params.id);\n    console.log(selectedBook);\n    /*     const collectionRef = firestore.collection(\"books\").doc(match.params.id);\n        collectionRef.get()\n          .then(doc => console.log(doc.data()))\n          .catch(error => console.log(error)); */\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (!this.props.selectedBook || this.props.selectedBook.id !== this.props.match.params.id) {\n      console.log('not rerendered');\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    const {\n      selectedBook\n    } = this.props;\n    let elementsToRender = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 28\n      }\n    }, \"Loading ...\");\n\n    if (selectedBook) {\n      elementsToRender = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"book-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: selectedBook.url,\n        className: \"book-details__image\",\n        alt: \"book cover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"book-details__head head\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"head__title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, selectedBook.title), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"head__author\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, \"By \", selectedBook.author), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"head__publication\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, selectedBook.publication), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"head__status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, selectedBook.status)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"book-details__cart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"book-details__price-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, \"Book Price\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"book-details__price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, \"Rs \", selectedBook.price), /*#__PURE__*/React.createElement(CustomButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, \"Add to Cart\"), /*#__PURE__*/React.createElement(CustomButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, \"Add to Favorite\")), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"book-details__description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, selectedBook.description));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, elementsToRender);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  filterSelectedBook: bookID => {\n    dispatch(bookFilter(bookID));\n  }\n});\n\nconst mapStateToProps = state => ({\n  selectedBook: state.book.currentBook\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookDetails);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/client/src/components/BookDetails/BookDetails.js"],"names":["React","Component","connect","CustomButton","book1","bookFilter","BookDetails","componentDidMount","match","filterSelectedBook","selectedBook","props","params","id","console","log","shouldComponentUpdate","nextProps","nextState","render","elementsToRender","url","title","author","publication","status","price","description","mapDispatchToProps","dispatch","bookID","mapStateToProps","state","book","currentBook"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../CustomButton/CustomButton';\nimport './BookDetails.scss';\nimport book1 from '../../images/book1.jpg';\nimport { bookFilter } from '../../redux/actions/book.actions';\n\nclass BookDetails extends Component {\n  componentDidMount() {\n    const { match, filterSelectedBook, selectedBook } = this.props;\n    filterSelectedBook(match.params.id);\n    console.log(selectedBook);\n    /*     const collectionRef = firestore.collection(\"books\").doc(match.params.id);\n        collectionRef.get()\n          .then(doc => console.log(doc.data()))\n          .catch(error => console.log(error)); */\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    if (!this.props.selectedBook || (this.props.selectedBook.id !== this.props.match.params.id)) {\n      console.log('not rerendered');\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  render() {\n    const { selectedBook } = this.props;\n    let elementsToRender = <div>Loading ...</div>;\n    if (selectedBook) {\n      elementsToRender = (<div className=\"book-details\">\n        <img src={selectedBook.url} className=\"book-details__image\" alt=\"book cover\" />\n        <div className=\"book-details__head head\">\n          <h3 className=\"head__title\">{selectedBook.title}</h3>\n          <p className=\"head__author\">By {selectedBook.author}</p>\n          <p className=\"head__publication\">{selectedBook.publication}</p>\n          <p className=\"head__status\">{selectedBook.status}</p>\n        </div>\n        <div className=\"book-details__cart\">\n          <h3 className=\"book-details__price-title\">Book Price</h3>\n          <p className=\"book-details__price\">Rs {selectedBook.price}</p>\n          <CustomButton>Add to Cart</CustomButton>\n          <CustomButton>Add to Favorite</CustomButton>\n        </div>\n        <p className=\"book-details__description\">{selectedBook.description}</p>\n      </div>);\n    }\n\n    return (\n      <>\n        {elementsToRender}\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  filterSelectedBook: bookID => { dispatch(bookFilter(bookID)); },\n});\n\nconst mapStateToProps = state => ({\n  selectedBook: state.book.currentBook,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookDetails);\n"]},"metadata":{},"sourceType":"module"}