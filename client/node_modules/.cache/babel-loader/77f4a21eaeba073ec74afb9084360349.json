{"ast":null,"code":"var _jsxFileName = \"/home/suman/react-projects/redux/my-bookstore/src/container/AdminContainers/BookForm/BooksForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createBook } from '../../../actions/index';\nimport classes from './BooksForm.module.css';\n\nclass BookForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        book\n      } = this.state;\n      const updatedBook = book;\n      updatedBook[event.target.id] = event.target.value;\n      this.setState({\n        book: updatedBook\n      });\n    };\n\n    this.handleSubmit = () => {\n      const {\n        addBook\n      } = this.props;\n      const book = { ...this.state,\n        id: Math.random()\n      };\n      addBook(book);\n      this.setState({\n        title: '',\n        category: ''\n      });\n    };\n\n    this.state = {\n      book: {\n        isbn: null,\n        title: '',\n        description: '',\n        category: '',\n        genre: '',\n        author: '',\n        publisher: '',\n        price: '',\n        image: '',\n        status: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isbn,\n      title,\n      description,\n      category,\n      genre,\n      author,\n      publisher,\n      price,\n      image,\n      status\n    } = this.state;\n    const {\n      categories,\n      bookCondition\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.Title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Add new to Bookstore\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"isbn\",\n      placeholder: \"ISBN number\",\n      value: isbn,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: [classes.Input, classes.Text].join(' '),\n      id: \"title\",\n      placeholder: \"Enter Book Title\",\n      type: \"text\",\n      value: title,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"textarea\",\n      id: \"description\",\n      placeholder: \"Add short description\",\n      value: description,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: [classes.Select, classes.Text].join(' '),\n      id: \"category\",\n      value: category,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, categories.map(option => /*#__PURE__*/React.createElement(\"option\", {\n      key: option,\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, option))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"genre\",\n      placeholder: \"Add genre\",\n      value: genre,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"author\",\n      placeholder: \"Author please\",\n      value: author,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"publisher\",\n      placeholder: \"Publisher name\",\n      value: publisher,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      step: \"0.01\",\n      id: \"price\",\n      placeholder: \"Enter price\",\n      value: price,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: [classes.Select, classes.Text].join(' '),\n      id: \"status\",\n      value: status,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, bookCondition.map(option => /*#__PURE__*/React.createElement(\"option\", {\n      key: option,\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, option))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"image\",\n      value: image,\n      onChange: this.onFileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.Button,\n      name: \"add\",\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"ADD\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addBook: data => {\n    dispatch(createBook(data));\n  }\n});\n\nBookForm.propTypes = {\n  addBook: PropTypes.func.isRequired,\n  categories: PropTypes.instanceOf(Array).isRequired\n};\nexport default connect(null, mapDispatchToProps)(BookForm);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/src/container/AdminContainers/BookForm/BooksForm.js"],"names":["React","Component","PropTypes","connect","createBook","classes","BookForm","constructor","props","handleChange","event","book","state","updatedBook","target","id","value","setState","handleSubmit","addBook","Math","random","title","category","isbn","description","genre","author","publisher","price","image","status","render","categories","bookCondition","Form","Title","Input","Text","join","Select","map","option","onFileChange","Button","mapDispatchToProps","dispatch","data","propTypes","func","isRequired","instanceOf","Array"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createBook } from '../../../actions/index';\nimport classes from './BooksForm.module.css';\n\nclass BookForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      book: {\n        isbn: null,\n        title: '',\n        description: '',\n        category: '',\n        genre: '',\n        author: '',\n        publisher: '',\n        price: '',\n        image: '',\n        status: '',\n      },\n    };\n  }\n\n  handleChange = event => {\n    const { book } = this.state;\n    const updatedBook = book;\n    updatedBook[event.target.id] = event.target.value;\n    this.setState({ book: updatedBook });\n  };\n\n  handleSubmit = () => {\n    const { addBook } = this.props;\n    const book = { ...this.state, id: Math.random() };\n    addBook(book);\n    this.setState({ title: '', category: '' });\n  };\n\n  render() {\n    const {\n      isbn, title, description, category, genre, author, publisher, price, image, status\n    } = this.state;\n    const { categories, bookCondition } = this.props;\n    return (\n      <div className={classes.Form}>\n        <form>\n          <h3 className={classes.Title}>Add new to Bookstore</h3>\n          <input type=\"number\" id=\"isbn\" placeholder=\"ISBN number\" value={isbn} onChange={this.handleChange} required />\n          <input className={[classes.Input, classes.Text].join(' ')} id=\"title\" placeholder=\"Enter Book Title\" type=\"text\" value={title} onChange={this.handleChange} required />\n          <input type=\"textarea\" id=\"description\" placeholder=\"Add short description\" value={description} onChange={this.handleChange} required />\n          <select className={[classes.Select, classes.Text].join(' ')} id=\"category\" value={category} onChange={this.handleChange}>\n            {\n              categories.map(option => (\n                <option\n                  key={option}\n                  value={option}\n                >\n                  {option}\n                </option>\n              ))\n            }\n          </select>\n          <input type=\"text\" id=\"genre\" placeholder=\"Add genre\" value={genre} onChange={this.handleChange} required />\n          <input type=\"text\" id=\"author\" placeholder=\"Author please\" value={author} onChange={this.handleChange} required />\n          <input type=\"text\" id=\"publisher\" placeholder=\"Publisher name\" value={publisher} onChange={this.handleChange} required />\n          <input type=\"number\" step=\"0.01\" id=\"price\" placeholder=\"Enter price\" value={price} onChange={this.handleChange} required />\n          <select className={[classes.Select, classes.Text].join(' ')} id=\"status\" value={status} onChange={this.handleChange}>\n            {\n              bookCondition.map(option => (\n                <option\n                  key={option}\n                  value={option}\n                >\n                  {option}\n                </option>\n              ))\n            }\n          </select>\n          <input type=\"file\" id=\"image\" value={image} onChange={this.onFileChange} />\n          <button className={classes.Button} name=\"add\" type=\"button\" onClick={this.handleSubmit}>ADD</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addBook: data => { dispatch(createBook(data)); },\n});\n\nBookForm.propTypes = {\n  addBook: PropTypes.func.isRequired,\n  categories: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(BookForm);\n"]},"metadata":{},"sourceType":"module"}