{"ast":null,"code":"var _jsxFileName = \"/home/suman/react-projects/redux/my-bookstore/client/src/components/BookDetails/BookDetails.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../CustomButton/CustomButton';\nimport CrudButtons from '../CrudButtons/CrudButtons';\nimport './BookDetails.scss';\nimport { bookFilter, boo } from '../../redux/actions/book.actions';\n\nclass BookDetails extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.removeBook = bookID => {\n      console.log(bookID);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match,\n      filterSelectedBook,\n      selectedBook\n    } = this.props;\n    filterSelectedBook(match.params.id);\n    /*     const collectionRef = firestore.collection(\"books\").doc(match.params.id);\n        collectionRef.get()\n          .then(doc => console.log(doc.data()))\n          .catch(error => console.log(error)); */\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (!this.props.selectedBook || this.props.selectedBook.id !== this.props.match.params.id) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    const {\n      selectedBook,\n      admin\n    } = this.props;\n\n    const addCartDetails = bookToDisplay => {\n      let cartDetails = null;\n\n      if (!admin) {\n        cartDetails = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"book-details__cart\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"book-details__price-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }\n        }, \"Book Price\"), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"book-details__price\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }\n        }, \"Rs \", bookToDisplay.price), /*#__PURE__*/React.createElement(CustomButton, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }\n        }, \"Add to Cart\"), /*#__PURE__*/React.createElement(CustomButton, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }\n        }, \"Add to Favorite\"));\n      }\n\n      return cartDetails;\n    };\n\n    const updateDeleteLinks = bookToDisplay => {\n      let links = null;\n\n      if (admin) {\n        links = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }\n        }, \"Price: \", bookToDisplay.price), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(CrudButtons, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }\n        })));\n      }\n\n      return links;\n    };\n\n    let elementsToRender = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 28\n      }\n    }, \"Loading ...\");\n\n    if (selectedBook.length > 0) {\n      const bookToDisplay = selectedBook[0];\n      elementsToRender = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"book-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: bookToDisplay.url,\n        className: \"book-details__image\",\n        alt: \"book cover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"book-details__head head\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"head__title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, bookToDisplay.title), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"head__author\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, \"By \", bookToDisplay.author), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"head__publication\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, \"Published by: \", bookToDisplay.publication), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"head__status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, \"Book status: \", bookToDisplay.status), updateDeleteLinks(bookToDisplay)), addCartDetails(bookToDisplay), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"book-details__description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, bookToDisplay.description));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, elementsToRender);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  filterSelectedBook: bookID => {\n    dispatch(bookFilter(bookID));\n  }\n});\n\nconst mapStateToProps = state => ({\n  selectedBook: state.book.currentBook\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookDetails);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/client/src/components/BookDetails/BookDetails.js"],"names":["React","Component","connect","CustomButton","CrudButtons","bookFilter","boo","BookDetails","removeBook","bookID","console","log","componentDidMount","match","filterSelectedBook","selectedBook","props","params","id","shouldComponentUpdate","nextProps","nextState","render","admin","addCartDetails","bookToDisplay","cartDetails","price","updateDeleteLinks","links","elementsToRender","length","url","title","author","publication","status","description","mapDispatchToProps","dispatch","mapStateToProps","state","book","currentBook"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../CustomButton/CustomButton';\nimport CrudButtons from '../CrudButtons/CrudButtons';\nimport './BookDetails.scss';\nimport { bookFilter, boo } from '../../redux/actions/book.actions';\n\nclass BookDetails extends Component {\n  componentDidMount() {\n    const { match, filterSelectedBook, selectedBook } = this.props;\n    filterSelectedBook(match.params.id);\n    /*     const collectionRef = firestore.collection(\"books\").doc(match.params.id);\n        collectionRef.get()\n          .then(doc => console.log(doc.data()))\n          .catch(error => console.log(error)); */\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    if (!this.props.selectedBook || (this.props.selectedBook.id !== this.props.match.params.id)) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  removeBook = (bookID) => {\n    console.log(bookID);\n  }\n\n  render() {\n    const { selectedBook, admin } = this.props;\n\n    const addCartDetails = (bookToDisplay) => {\n      let cartDetails = null;\n      if (!admin) {\n        cartDetails = (<div className=\"book-details__cart\">\n          <h3 className=\"book-details__price-title\">Book Price</h3>\n          <p className=\"book-details__price\">Rs {bookToDisplay.price}</p>\n          <CustomButton>Add to Cart</CustomButton>\n          <CustomButton>Add to Favorite</CustomButton>\n        </div>);\n      }\n      return cartDetails;\n    };\n\n    const updateDeleteLinks = (bookToDisplay) => {\n      let links = null;\n      if (admin) {\n        links = (\n          <>\n            <div>Price: {bookToDisplay.price}</div>\n            <div>\n              <CrudButtons />\n            </div>\n          </>\n        );\n      }\n      return links;\n    }\n\n    let elementsToRender = <div>Loading ...</div>;\n    if (selectedBook.length > 0) {\n      const bookToDisplay = selectedBook[0];\n      elementsToRender = (<div className=\"book-details\">\n        <img src={bookToDisplay.url} className=\"book-details__image\" alt=\"book cover\" />\n        <div className=\"book-details__head head\">\n          <h3 className=\"head__title\">{bookToDisplay.title}</h3>\n          <p className=\"head__author\">By {bookToDisplay.author}</p>\n          <p className=\"head__publication\">Published by: {bookToDisplay.publication}</p>\n          <p className=\"head__status\">Book status: {bookToDisplay.status}</p>\n          {updateDeleteLinks(bookToDisplay)}\n        </div>\n        {addCartDetails(bookToDisplay)}\n        <p className=\"book-details__description\">{bookToDisplay.description}</p>\n      </div>);\n    }\n\n    return (\n      <>\n        {elementsToRender}\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  filterSelectedBook: bookID => { dispatch(bookFilter(bookID)) },\n});\n\nconst mapStateToProps = state => ({\n  selectedBook: state.book.currentBook,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookDetails);\n"]},"metadata":{},"sourceType":"module"}