{"ast":null,"code":"var _jsxFileName = \"/home/suman/react-projects/redux/my-bookstore/src/container/BookList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classes from './BookList.module.css';\nimport Book from '../components/Book/Book';\nimport CategoryFilter from '../components/CategoryFilter/CategoryFilter';\nimport { removeBook, filterBooks } from '../actions/index';\n\nconst bookList = ({\n  books,\n  deleteBook,\n  categoryFilter,\n  categories,\n  filter\n}) => {\n  const handleRemoveBook = book => deleteBook(book);\n\n  const handleFilterChange = filteredCategory => categoryFilter(filteredCategory);\n\n  const filteredBooks = () => {\n    let updatedBooks;\n\n    if (filter === 'All') {\n      updatedBooks = books;\n    } else {\n      updatedBooks = books.filter(book => book.category === filter);\n    }\n\n    return updatedBooks;\n  };\n\n  const booksFiltered = filteredBooks();\n  let renderBooks = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, \"Books of this category are not found\");\n\n  if (booksFiltered.length <= 0) {\n    renderBooks = booksFiltered.map(book => /*#__PURE__*/React.createElement(Book, {\n      key: book.id,\n      bookItem: book,\n      clicked: () => handleRemoveBook(book),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  console.log(booksFiltered.length);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CategoryFilter, {\n    categoryHandler: handleFilterChange,\n    category: categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    className: classes.BookList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Book ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Remove\")), renderBooks)));\n};\n\nbookList.propTypes = {\n  books: PropTypes.instanceOf(Array).isRequired,\n  deleteBook: PropTypes.func.isRequired,\n  categoryFilter: PropTypes.func.isRequired,\n  categories: PropTypes.instanceOf(Array).isRequired,\n  filter: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteBook: data => {\n    dispatch(removeBook(data));\n  },\n  categoryFilter: category => {\n    dispatch(filterBooks(category));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(bookList);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/src/container/BookList.js"],"names":["React","connect","PropTypes","classes","Book","CategoryFilter","removeBook","filterBooks","bookList","books","deleteBook","categoryFilter","categories","filter","handleRemoveBook","book","handleFilterChange","filteredCategory","filteredBooks","updatedBooks","category","booksFiltered","renderBooks","length","map","id","console","log","BookList","propTypes","instanceOf","Array","isRequired","func","string","mapStateToProps","state","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classes from './BookList.module.css';\nimport Book from '../components/Book/Book';\nimport CategoryFilter from '../components/CategoryFilter/CategoryFilter';\nimport { removeBook, filterBooks } from '../actions/index';\n\nconst bookList = ({\n  books, deleteBook, categoryFilter, categories, filter,\n}) => {\n  const handleRemoveBook = book => deleteBook(book);\n  const handleFilterChange = filteredCategory => categoryFilter(filteredCategory);\n  const filteredBooks = () => {\n    let updatedBooks;\n    if (filter === 'All') {\n      updatedBooks = books;\n    } else {\n      updatedBooks = books.filter(book => book.category === filter);\n    }\n    return updatedBooks;\n  };\n\n  const booksFiltered = filteredBooks();\n  let renderBooks = <p>Books of this category are not found</p>;\n  if (booksFiltered.length <= 0) {\n    renderBooks = booksFiltered.map(book => (\n      <Book\n        key={book.id}\n        bookItem={book}\n        clicked={() => handleRemoveBook(book)}\n      />\n    ))\n  }\n  console.log(booksFiltered.length);\n  return (\n    <div>\n      <CategoryFilter\n        categoryHandler={handleFilterChange}\n        category={categories}\n      />\n      <table className={classes.BookList}>\n        <tbody>\n          <tr>\n            <th>Book ID</th>\n            <th>Title</th>\n            <th>Category</th>\n            <th>Remove</th>\n          </tr>\n          {renderBooks}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nbookList.propTypes = {\n  books: PropTypes.instanceOf(Array).isRequired,\n  deleteBook: PropTypes.func.isRequired,\n  categoryFilter: PropTypes.func.isRequired,\n  categories: PropTypes.instanceOf(Array).isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteBook: data => { dispatch(removeBook(data)); },\n  categoryFilter: category => { dispatch(filterBooks(category)); },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(bookList);\n"]},"metadata":{},"sourceType":"module"}