{"ast":null,"code":"var _jsxFileName = \"/home/suman/react-projects/redux/my-bookstore/src/container/AdminContainers/BookForm/BooksForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { storage } from '../../../firebase/index';\nimport { createBook } from '../../../actions/index';\nimport classes from './BooksForm.module.css';\n\nclass BookForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        book\n      } = this.state;\n      const updatedBook = book;\n      updatedBook[event.target.id] = event.target.value;\n      this.setState({\n        book: updatedBook\n      });\n    };\n\n    this.handleFileChange = event => {\n      if (event.target.files[0]) {\n        const {\n          book\n        } = this.state;\n        let updatedBook = book;\n        updatedBook = { ...updatedBook,\n          image: event.target.files[0]\n        };\n        this.setState({\n          book: updatedBook\n        });\n      }\n    };\n\n    this.handleSubmit = () => {\n      const {\n        addBook\n      } = this.props;\n      const {\n        book\n      } = this.state;\n      const uploadImage = storage.ref(`images/${book.image.name}`).put(book.image);\n      uploadImage.on('state_changed', snapshot => {\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        this.setState({\n          progress\n        });\n      }, error => {\n        console.log(error);\n      }, () => {\n        storage.ref('images').child(image.name).getDownloadURL().then(url => {\n          console.log(url);\n          this.setState();\n        });\n      });\n      addBook(book);\n      console.log(book);\n    };\n\n    this.state = {\n      book: {\n        isbn: '',\n        title: '',\n        description: '',\n        category: '',\n        genre: '',\n        author: '',\n        publisher: '',\n        price: '',\n        image: '',\n        status: '',\n        url: ''\n      },\n      progress: 0\n    };\n  }\n\n  render() {\n    const {\n      book\n    } = this.state;\n    const {\n      isbn,\n      title,\n      description,\n      category,\n      genre,\n      author,\n      publisher,\n      price,\n      image,\n      status\n    } = book;\n    const {\n      categories,\n      bookCondition\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.Title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \"Add new to Bookstore\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"isbn\",\n      className: [classes.Input, classes.InputFields, classes.Text].join(' '),\n      placeholder: \"ISBN number\",\n      value: isbn,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: [classes.Input, classes.InputFields, classes.Text].join(' '),\n      id: \"title\",\n      placeholder: \"Enter Book Title\",\n      type: \"text\",\n      value: title,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"textarea\",\n      id: \"description\",\n      className: [classes.Input, classes.InputFields, classes.Text].join(' '),\n      placeholder: \"Add short description\",\n      value: description,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: [classes.Select, classes.InputFields, classes.Text].join(' '),\n      id: \"category\",\n      value: category,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, categories.map(option => /*#__PURE__*/React.createElement(\"option\", {\n      key: option,\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, option))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"genre\",\n      className: [classes.Input, classes.InputFields, classes.Text].join(' '),\n      placeholder: \"Add genre\",\n      value: genre,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"author\",\n      className: [classes.Input, classes.InputFields, classes.Text].join(' '),\n      placeholder: \"Author please\",\n      value: author,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"publisher\",\n      className: [classes.Input, classes.InputFields, classes.Text].join(' '),\n      placeholder: \"Publishername\",\n      value: publisher,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      step: \"0.01\",\n      id: \"price\",\n      className: [classes.Input, classes.InputFields, classes.Text].join(' '),\n      placeholder: \"Enter price\",\n      value: price,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: [classes.Select, classes.InputFields, classes.Text].join(' '),\n      id: \"status\",\n      value: status,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, bookCondition.map(option => /*#__PURE__*/React.createElement(\"option\", {\n      key: option,\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, option))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleFileChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: [classes.Button, classes.SaveBtn].join(' '),\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, \"SAVE BOOK\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addBook: data => {\n    dispatch(createBook(data));\n  }\n});\n\nBookForm.propTypes = {\n  addBook: PropTypes.func.isRequired,\n  categories: PropTypes.instanceOf(Array).isRequired,\n  bookCondition: PropTypes.instanceOf(Array).isRequired\n};\nexport default connect(null, mapDispatchToProps)(BookForm);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/src/container/AdminContainers/BookForm/BooksForm.js"],"names":["React","Component","PropTypes","connect","storage","createBook","classes","BookForm","constructor","props","handleChange","event","book","state","updatedBook","target","id","value","setState","handleFileChange","files","image","handleSubmit","addBook","uploadImage","ref","name","put","on","snapshot","progress","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","url","isbn","title","description","category","genre","author","publisher","price","status","render","categories","bookCondition","Form","Title","Input","InputFields","Text","join","Select","map","option","Button","SaveBtn","mapDispatchToProps","dispatch","data","propTypes","func","isRequired","instanceOf","Array"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { storage } from '../../../firebase/index';\nimport { createBook } from '../../../actions/index';\nimport classes from './BooksForm.module.css';\n\nclass BookForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      book: {\n        isbn: '',\n        title: '',\n        description: '',\n        category: '',\n        genre: '',\n        author: '',\n        publisher: '',\n        price: '',\n        image: '',\n        status: '',\n        url: '',\n      },\n      progress: 0,\n    };\n  }\n\n  handleChange = event => {\n    const { book } = this.state;\n    const updatedBook = book;\n    updatedBook[event.target.id] = event.target.value;\n    this.setState({ book: updatedBook });\n  };\n\n  handleFileChange = event => {\n    if (event.target.files[0]) {\n      const { book } = this.state;\n      let updatedBook = book;\n      updatedBook = {\n        ...updatedBook,\n        image: event.target.files[0],\n      };\n      this.setState({ book: updatedBook });\n    }\n  };\n\n  handleSubmit = () => {\n    const { addBook } = this.props;\n    const { book } = this.state;\n    const uploadImage = storage.ref(`images/${book.image.name}`).put(book.image);\n    uploadImage.on('state_changed',\n      snapshot => {\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        this.setState({ progress });\n      },\n      error => {\n        console.log(error);\n      },\n      () => {\n        storage.ref('images').child(image.name).getDownloadURL().then(url => {\n          console.log(url);\n\n          this.setState();\n        });\n      });\n    addBook(book);\n    console.log(book);\n  };\n\n  render() {\n    const { book } = this.state;\n    const {\n      isbn, title, description, category, genre, author, publisher, price, image, status,\n    } = book;\n    const { categories, bookCondition } = this.props;\n    return (\n      <div className={classes.Form}>\n        <h3 className={classes.Title}>Add new to Bookstore</h3>\n        <form>\n          <input\n            type=\"number\"\n            id=\"isbn\"\n            className={[classes.Input, classes.InputFields, classes.Text].join(' ')}\n            placeholder=\"ISBN number\"\n            value={isbn}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            className={[classes.Input, classes.InputFields, classes.Text].join(' ')}\n            id=\"title\"\n            placeholder=\"Enter Book Title\"\n            type=\"text\"\n            value={title}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"textarea\"\n            id=\"description\"\n            className={[classes.Input, classes.InputFields, classes.Text].join(' ')}\n            placeholder=\"Add short description\"\n            value={description}\n            onChange={this.handleChange}\n            required\n          />\n          <select\n            className={[classes.Select, classes.InputFields, classes.Text].join(' ')}\n            id=\"category\"\n            value={category}\n            onChange={this.handleChange}\n          >\n            {\n              categories.map(option => (\n                <option\n                  key={option}\n                  value={option}\n                >\n                  {option}\n                </option>\n              ))\n            }\n          </select>\n          <input\n            type=\"text\"\n            id=\"genre\"\n            className={[classes.Input, classes.InputFields, classes.Text].join(' ')}\n            placeholder=\"Add genre\"\n            value={genre}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"text\"\n            id=\"author\"\n            className={[classes.Input, classes.InputFields, classes.Text].join(' ')}\n            placeholder=\"Author please\"\n            value={author}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"text\"\n            id=\"publisher\"\n            className={[classes.Input, classes.InputFields, classes.Text].join(' ')}\n            placeholder=\"Publishername\"\n            value={publisher}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"number\"\n            step=\"0.01\"\n            id=\"price\"\n            className={[classes.Input, classes.InputFields, classes.Text].join(' ')}\n            placeholder=\"Enter price\"\n            value={price}\n            onChange={this.handleChange}\n            required\n          />\n          <select\n            className={[classes.Select, classes.InputFields, classes.Text].join(' ')}\n            id=\"status\"\n            value={status}\n            onChange={this.handleChange}\n          >\n            {\n              bookCondition.map(option => (\n                <option\n                  key={option}\n                  value={option}\n                >\n                  {option}\n                </option>\n              ))\n            }\n          </select>\n          <input\n            type=\"file\"\n            onChange={this.handleFileChange}\n            required\n          />\n          <button\n            className={[classes.Button, classes.SaveBtn].join(' ')}\n            type=\"button\"\n            onClick={this.handleSubmit}\n          >\n            SAVE BOOK\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addBook: data => { dispatch(createBook(data)); },\n});\n\nBookForm.propTypes = {\n  addBook: PropTypes.func.isRequired,\n  categories: PropTypes.instanceOf(Array).isRequired,\n  bookCondition: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(BookForm);\n"]},"metadata":{},"sourceType":"module"}