{"ast":null,"code":"var _jsxFileName = \"/home/suman/react-projects/redux/my-bookstore/client/src/container/AdminContainers/AdminMainContainer/AdminMainContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport BookList from '../BookList/BookList';\nimport BookForm from '../BookForm/BooksForm';\nimport BookDetails from '../../../components/BookDetails/BookDetails';\nimport CategoryFilter from '../../../components/CategoryFilter/CategoryFilter';\nimport { category, bookStatus } from '../../../utilities/utility';\nimport { removeBook, filterCategory } from '../../../redux/actions/book.actions';\n\nconst adminMainContainer = props => {\n  const {\n    books,\n    deleteBook,\n    categoryFilter,\n    history\n  } = props;\n  console.log(books);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CategoryFilter, {\n    bookCategories: category,\n    categoryHandler: filteredCategory => categoryFilter(filteredCategory),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/auth/new-book\",\n    exact: true,\n    render: () => /*#__PURE__*/React.createElement(BookForm, {\n      bookCondition: bookStatus,\n      categories: category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 58\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/auth\",\n    exact: true,\n    render: () => /*#__PURE__*/React.createElement(BookList, {\n      deleteBook: deleteBook,\n      availableBooks: books,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 49\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/auth/books/:id\",\n    render: () => /*#__PURE__*/React.createElement(BookDetails, {\n      admin: true,\n      history: history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 53\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  books: state.book.filteredBooks,\n  adminStatus: state.user.admin\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteBook: data => {\n    dispatch(removeBook(data));\n  },\n  categoryFilter: category => {\n    dispatch(filterCategory(category));\n  }\n});\n\nadminMainContainer.propTypes = {\n  books: PropTypes.instanceOf(Array).isRequired,\n  deleteBook: PropTypes.func.isRequired,\n  categoryFilter: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(adminMainContainer);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/client/src/container/AdminContainers/AdminMainContainer/AdminMainContainer.js"],"names":["React","connect","Route","Switch","PropTypes","BookList","BookForm","BookDetails","CategoryFilter","category","bookStatus","removeBook","filterCategory","adminMainContainer","props","books","deleteBook","categoryFilter","history","console","log","filteredCategory","mapStateToProps","state","book","filteredBooks","adminStatus","user","admin","mapDispatchToProps","dispatch","data","propTypes","instanceOf","Array","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport BookList from '../BookList/BookList';\nimport BookForm from '../BookForm/BooksForm';\nimport BookDetails from '../../../components/BookDetails/BookDetails';\nimport CategoryFilter from '../../../components/CategoryFilter/CategoryFilter';\nimport { category, bookStatus } from '../../../utilities/utility';\nimport { removeBook, filterCategory } from '../../../redux/actions/book.actions';\n\nconst adminMainContainer = props => {\n  const {\n    books, deleteBook, categoryFilter, history\n  } = props;\n  console.log(books);\n\n  return (\n    <main>\n      <CategoryFilter\n        bookCategories={category}\n        categoryHandler={filteredCategory => categoryFilter(filteredCategory)}\n      />\n      <Switch>\n        <Route path=\"/auth/new-book\" exact render={() => <BookForm bookCondition={bookStatus} categories={category} />} />\n        <Route path=\"/auth\" exact render={() => <BookList deleteBook={deleteBook} availableBooks={books} />} />\n        <Route path=\"/auth/books/:id\" render={() => <BookDetails admin history={history} />} />\n      </Switch>\n    </main>\n  );\n};\n\n\nconst mapStateToProps = state => ({\n  books: state.book.filteredBooks,\n  adminStatus: state.user.admin,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteBook: data => { dispatch(removeBook(data)); },\n  categoryFilter: category => { dispatch(filterCategory(category)); },\n});\n\n\nadminMainContainer.propTypes = {\n  books: PropTypes.instanceOf(Array).isRequired,\n  deleteBook: PropTypes.func.isRequired,\n  categoryFilter: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(adminMainContainer);\n"]},"metadata":{},"sourceType":"module"}