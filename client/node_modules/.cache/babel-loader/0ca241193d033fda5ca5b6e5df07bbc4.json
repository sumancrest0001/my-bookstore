{"ast":null,"code":"var _jsxFileName = \"/home/suman/react-projects/redux/my-bookstore/client/src/components/CategoryFilter/CategoryFilter.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { category } from '../../utilities/utility';\nimport { filterCategory } from '../../redux/actions/book.actions';\nimport './CategoryFilter.scss';\nimport '../../../node_modules/font-awesome/css/font-awesome.min.css';\n\nconst categoryFilter = ({\n  categoryFilter\n}) => {\n  const handleFilter = event => {\n    categoryFilter(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"category\",\n    className: \"Category\",\n    onChange: handleFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, [...category, 'All'].map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option,\n    value: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, option))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  filterCategory: filteredCategory => {\n    dispatch(filterCategory(filteredCategory));\n  }\n});\n\ncategoryFilter.propTypes = {\n  bookCategories: PropTypes.instanceOf(Array).isRequired,\n  categoryHandler: PropTypes.func.isRequired\n};\nexport default connect(null, mapDispatchToProps)(categoryFilter);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/client/src/components/CategoryFilter/CategoryFilter.js"],"names":["React","PropTypes","connect","category","filterCategory","categoryFilter","handleFilter","event","target","value","map","option","mapDispatchToProps","dispatch","filteredCategory","propTypes","bookCategories","instanceOf","Array","isRequired","categoryHandler","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,OAAO,uBAAP;AACA,OAAO,6DAAP;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAwB;AAC7C,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5BF,IAAAA,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AAED,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,SAAS,EAAC,UAFZ;AAGE,IAAA,QAAQ,EAAEH,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,CAAC,GAAGH,QAAJ,EAAc,KAAd,EAAqBO,GAArB,CAAyBC,MAAM,iBAC7B;AACE,IAAA,GAAG,EAAEA,MADP;AAEE,IAAA,KAAK,EAAEA,MAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGA,MAJH,CADF,CANJ,CADF,CADF;AAoBD,CA1BD;;AA4BA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCT,EAAAA,cAAc,EAAEU,gBAAgB,IAAI;AAAED,IAAAA,QAAQ,CAACT,cAAc,CAACU,gBAAD,CAAf,CAAR;AAA4C;AAD5C,CAAL,CAAnC;;AAIAT,cAAc,CAACU,SAAf,GAA2B;AACzBC,EAAAA,cAAc,EAAEf,SAAS,CAACgB,UAAV,CAAqBC,KAArB,EAA4BC,UADnB;AAEzBC,EAAAA,eAAe,EAAEnB,SAAS,CAACoB,IAAV,CAAeF;AAFP,CAA3B;AAKA,eAAejB,OAAO,CAAC,IAAD,EAAOU,kBAAP,CAAP,CAAkCP,cAAlC,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { category } from '../../utilities/utility';\nimport { filterCategory } from '../../redux/actions/book.actions';\nimport './CategoryFilter.scss';\nimport '../../../node_modules/font-awesome/css/font-awesome.min.css';\n\nconst categoryFilter = ({ categoryFilter }) => {\n  const handleFilter = event => {\n    categoryFilter(event.target.value);\n\n  };\n\n  return (\n    <div className=\"Filter\">\n      <select\n        id=\"category\"\n        className=\"Category\"\n        onChange={handleFilter}\n      >\n        {\n          [...category, 'All'].map(option => (\n            <option\n              key={option}\n              value={option}\n            >\n              {option}\n            </option>\n          ))\n        }\n      </select>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  filterCategory: filteredCategory => { dispatch(filterCategory(filteredCategory)) },\n});\n\ncategoryFilter.propTypes = {\n  bookCategories: PropTypes.instanceOf(Array).isRequired,\n  categoryHandler: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(categoryFilter);\n"]},"metadata":{},"sourceType":"module"}