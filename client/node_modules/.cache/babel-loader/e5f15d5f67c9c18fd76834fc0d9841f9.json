{"ast":null,"code":"var _jsxFileName = \"/home/suman/react-projects/redux/my-bookstore/src/container/AdminContainers/BookForm/BooksForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createBook } from '../../../actions/index';\nimport classes from './BooksForm.module.css';\n\nclass BookForm extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      if (event.target.id === 'title') {\n        this.setState({\n          title: event.target.value\n        });\n      } else if (event.target.id === 'category') {\n        this.setState({\n          category: event.target.value\n        });\n      }\n    };\n\n    this.handleSubmit = () => {\n      const {\n        addBook\n      } = this.props;\n      const book = { ...this.state,\n        id: Math.random()\n      };\n      addBook(book);\n      this.setState({\n        title: '',\n        category: ''\n      });\n    };\n\n    this.state = {\n      book: {\n        isbn: null,\n        title: '',\n        description: '',\n        category: '',\n        genre: '',\n        author: '',\n        publisher: '',\n        price: '',\n        image: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      title,\n      category\n    } = this.state;\n    const {\n      categories\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.Title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"Add new to Bookstore\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: [classes.Input, classes.Text].join(' '),\n      id: \"title\",\n      placeholder: \"Enter Book Title\",\n      type: \"text\",\n      value: title,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: [classes.Select, classes.Text].join(' '),\n      id: \"category\",\n      value: category,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, categories.map(option => /*#__PURE__*/React.createElement(\"option\", {\n      key: option,\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, option))), /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.Button,\n      name: \"add\",\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"ADD\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addBook: data => {\n    dispatch(createBook(data));\n  }\n});\n\nBookForm.propTypes = {\n  addBook: PropTypes.func.isRequired,\n  categories: PropTypes.instanceOf(Array).isRequired\n};\nexport default connect(null, mapDispatchToProps)(BookForm);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/src/container/AdminContainers/BookForm/BooksForm.js"],"names":["React","Component","PropTypes","connect","createBook","classes","BookForm","constructor","handleChange","event","target","id","setState","title","value","category","handleSubmit","addBook","props","book","state","Math","random","isbn","description","genre","author","publisher","price","image","render","categories","Form","Title","Input","Text","join","Select","map","option","Button","mapDispatchToProps","dispatch","data","propTypes","func","isRequired","instanceOf","Array"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createBook } from '../../../actions/index';\nimport classes from './BooksForm.module.css';\n\nclass BookForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      book: {\n        isbn: null,\n        title: '',\n        description: '',\n        category: '',\n        genre: '',\n        author: '',\n        publisher: '',\n        price: '',\n        image: '',\n      }\n    };\n  }\n\n  handleChange = event => {\n    if (event.target.id === 'title') {\n      this.setState({ title: event.target.value });\n    } else if (event.target.id === 'category') {\n      this.setState({ category: event.target.value });\n    }\n  };\n\n  handleSubmit = () => {\n    const { addBook } = this.props;\n    const book = { ...this.state, id: Math.random() };\n    addBook(book);\n    this.setState({ title: '', category: '' });\n  };\n\n  render() {\n    const { title, category } = this.state;\n    const { categories } = this.props;\n    return (\n      <div className={classes.Form}>\n        <form>\n          <h3 className={classes.Title}>Add new to Bookstore</h3>\n          <input className={[classes.Input, classes.Text].join(' ')} id=\"title\" placeholder=\"Enter Book Title\" type=\"text\" value={title} onChange={this.handleChange} required />\n          <select className={[classes.Select, classes.Text].join(' ')} id=\"category\" value={category} onChange={this.handleChange}>\n            {\n              categories.map(option => (\n                <option\n                  key={option}\n                  value={option}\n                >\n                  {option}\n                </option>\n              ))\n            }\n          </select>\n          <button className={classes.Button} name=\"add\" type=\"button\" onClick={this.handleSubmit}>ADD</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addBook: data => { dispatch(createBook(data)); },\n});\n\nBookForm.propTypes = {\n  addBook: PropTypes.func.isRequired,\n  categories: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(BookForm);\n"]},"metadata":{},"sourceType":"module"}