{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{Route,Switch}from'react-router-dom';import BookList from'../BookList/BookList';import BookForm from'../BookForm/BooksForm';import CategoryFilter from'../../../components/CategoryFilter/CategoryFilter';import{category,bookStatus}from'../../../utilities/utility';import{removeBook,filterBooks}from'../../../redux/actions/index';var adminMainContainer=function adminMainContainer(props){var books=props.books,deleteBook=props.deleteBook,filter=props.filter,categoryFilter=props.categoryFilter;var filteredBooks=function filteredBooks(){var updatedBooks;if(filter==='All'){updatedBooks=books;}else{updatedBooks=books.filter(function(book){return book.category===filter;});}return updatedBooks;};return/*#__PURE__*/React.createElement(\"main\",null,/*#__PURE__*/React.createElement(CategoryFilter,{bookCategories:category,categoryHandler:function categoryHandler(filteredCategory){return categoryFilter(filteredCategory);}}),/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"/auth/new-book\",exact:true,render:function render(){return/*#__PURE__*/React.createElement(BookForm,{bookCondition:bookStatus,categories:category});}}),/*#__PURE__*/React.createElement(Route,{path:\"/auth\",exact:true,render:function render(){return/*#__PURE__*/React.createElement(BookList,{deleteBook:deleteBook,availableBooks:books});}})));};var mapStateToProps=function mapStateToProps(state){return{books:state.books,adminStatus:state.user.admin};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{deleteBook:function deleteBook(data){dispatch(removeBook(data));},categoryFilter:function categoryFilter(category){dispatch(filterBooks(category));}};};export default connect(mapStateToProps,mapDispatchToProps)(adminMainContainer);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/src/container/AdminContainers/AdminMainContainer/AdminMainContainer.js"],"names":["React","connect","Route","Switch","BookList","BookForm","CategoryFilter","category","bookStatus","removeBook","filterBooks","adminMainContainer","props","books","deleteBook","filter","categoryFilter","filteredBooks","updatedBooks","book","filteredCategory","mapStateToProps","state","adminStatus","user","admin","mapDispatchToProps","dispatch","data"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,kBAA9B,CAGA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,cAAP,KAA2B,mDAA3B,CACA,OAASC,QAAT,CAAmBC,UAAnB,KAAqC,4BAArC,CACA,OAASC,UAAT,CAAqBC,WAArB,KAAwC,8BAAxC,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,KAAK,CAAI,IAEhCC,CAAAA,KAFgC,CAG9BD,KAH8B,CAEhCC,KAFgC,CAEzBC,UAFyB,CAG9BF,KAH8B,CAEzBE,UAFyB,CAEbC,MAFa,CAG9BH,KAH8B,CAEbG,MAFa,CAELC,cAFK,CAG9BJ,KAH8B,CAELI,cAFK,CAKlC,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAIC,CAAAA,YAAJ,CACA,GAAIH,MAAM,GAAK,KAAf,CAAsB,CACpBG,YAAY,CAAGL,KAAf,CACD,CAFD,IAEO,CACLK,YAAY,CAAGL,KAAK,CAACE,MAAN,CAAa,SAAAI,IAAI,QAAIA,CAAAA,IAAI,CAACZ,QAAL,GAAkBQ,MAAtB,EAAjB,CAAf,CACD,CACD,MAAOG,CAAAA,YAAP,CACD,CARD,CASA,mBACE,6CACE,oBAAC,cAAD,EACE,cAAc,CAAEX,QADlB,CAEE,eAAe,CAAE,yBAAAa,gBAAgB,QAAIJ,CAAAA,cAAc,CAACI,gBAAD,CAAlB,EAFnC,EADF,cAKE,oBAAC,MAAD,mBACE,oBAAC,KAAD,EAAO,IAAI,CAAC,gBAAZ,CAA6B,KAAK,KAAlC,CAAmC,MAAM,CAAE,qCAAM,oBAAC,QAAD,EAAU,aAAa,CAAEZ,UAAzB,CAAqC,UAAU,CAAED,QAAjD,EAAN,EAA3C,EADF,cAEE,oBAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,CAAoB,KAAK,KAAzB,CAA0B,MAAM,CAAE,qCAAM,oBAAC,QAAD,EAAU,UAAU,CAAEO,UAAtB,CAAkC,cAAc,CAAED,KAAlD,EAAN,EAAlC,EAFF,CALF,CADF,CAYD,CA1BD,CA6BA,GAAMQ,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCT,KAAK,CAAES,KAAK,CAACT,KADmB,CAEhCU,WAAW,CAAED,KAAK,CAACE,IAAN,CAAWC,KAFQ,CAAL,EAA7B,CAKA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCb,UAAU,CAAE,oBAAAc,IAAI,CAAI,CAAED,QAAQ,CAAClB,UAAU,CAACmB,IAAD,CAAX,CAAR,CAA6B,CADb,CAEtCZ,cAAc,CAAE,wBAAAT,QAAQ,CAAI,CAAEoB,QAAQ,CAACjB,WAAW,CAACH,QAAD,CAAZ,CAAR,CAAkC,CAF1B,CAAL,EAAnC,CAaA,cAAeN,CAAAA,OAAO,CAACoB,eAAD,CAAkBK,kBAAlB,CAAP,CAA6Cf,kBAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport BookList from '../BookList/BookList';\nimport BookForm from '../BookForm/BooksForm';\nimport CategoryFilter from '../../../components/CategoryFilter/CategoryFilter';\nimport { category, bookStatus } from '../../../utilities/utility';\nimport { removeBook, filterBooks } from '../../../redux/actions/index';\n\nconst adminMainContainer = props => {\n  const {\n    books, deleteBook, filter, categoryFilter,\n  } = props;\n\n  const filteredBooks = () => {\n    let updatedBooks;\n    if (filter === 'All') {\n      updatedBooks = books;\n    } else {\n      updatedBooks = books.filter(book => book.category === filter);\n    }\n    return updatedBooks;\n  };\n  return (\n    <main>\n      <CategoryFilter\n        bookCategories={category}\n        categoryHandler={filteredCategory => categoryFilter(filteredCategory)}\n      />\n      <Switch>\n        <Route path=\"/auth/new-book\" exact render={() => <BookForm bookCondition={bookStatus} categories={category} />} />\n        <Route path=\"/auth\" exact render={() => <BookList deleteBook={deleteBook} availableBooks={books} />} />\n      </Switch>\n    </main>\n  );\n};\n\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  adminStatus: state.user.admin,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteBook: data => { dispatch(removeBook(data)); },\n  categoryFilter: category => { dispatch(filterBooks(category)); },\n});\n\n\nadminMainContainer.propTypes = {\n  books: PropTypes.instanceOf(Array).isRequired,\n  deleteBook: PropTypes.func.isRequired,\n  categoryFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(adminMainContainer);\n"]},"metadata":{},"sourceType":"module"}