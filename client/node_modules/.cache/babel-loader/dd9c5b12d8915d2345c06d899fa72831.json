{"ast":null,"code":"var _jsxFileName = \"/home/suman/react-projects/redux/my-bookstore/src/container/BookList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classes from './BookList.module.css';\nimport Book from '../components/Book/Book';\nimport Aux from '../HOC/Aux';\nimport { removeBook } from '../actions/index';\n\nconst bookList = ({\n  books,\n  deleteBook,\n  categories\n}) => {\n  const handleRemoveBook = book => deleteBook(book);\n\n  return /*#__PURE__*/React.createElement(Aux, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"Select books by category\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"category\",\n    value: \"Learning\",\n    onChange: this.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, categories.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option,\n    value: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }, option)))), /*#__PURE__*/React.createElement(\"table\", {\n    className: classes.BookList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Book ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Remove\")), books.map(book => /*#__PURE__*/React.createElement(Book, {\n    key: book.id,\n    bookItem: book,\n    clicked: () => handleRemoveBook(book),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  })))));\n};\n\nbookList.propTypes = {\n  books: PropTypes.instanceOf(Array).isRequired,\n  deleteBook: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  books: state.books\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteBook: data => {\n    dispatch(removeBook(data));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(bookList);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/src/container/BookList.js"],"names":["React","connect","PropTypes","classes","Book","Aux","removeBook","bookList","books","deleteBook","categories","handleRemoveBook","book","Filter","handleChange","map","option","BookList","id","propTypes","instanceOf","Array","isRequired","func","mapStateToProps","state","mapDispatchToProps","dispatch","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,UAAT;AAAqBC,EAAAA;AAArB,CAAD,KAAuC;AACtD,QAAMC,gBAAgB,GAAGC,IAAI,IAAIH,UAAU,CAACG,IAAD,CAA3C;;AAEA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAET,OAAO,CAACU,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAEE;AAAQ,IAAA,EAAE,EAAC,UAAX;AAAsB,IAAA,KAAK,EAAC,UAA5B;AAAuC,IAAA,QAAQ,EAAE,KAAKC,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIJ,UAAU,CAACK,GAAX,CAAeC,MAAM,iBACnB;AACE,IAAA,GAAG,EAAEA,MADP;AAEE,IAAA,KAAK,EAAEA,MAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGA,MAJH,CADF,CAFJ,CAFF,CADF,eAgBE;AAAO,IAAA,SAAS,EAAEb,OAAO,CAACc,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF,EAOGT,KAAK,CAACO,GAAN,CAAUH,IAAI,iBACb,oBAAC,IAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACM,EADZ;AAEE,IAAA,QAAQ,EAAEN,IAFZ;AAGE,IAAA,OAAO,EAAE,MAAMD,gBAAgB,CAACC,IAAD,CAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAPH,CADF,CAhBF,CADF;AAoCD,CAvCD;;AAyCAL,QAAQ,CAACY,SAAT,GAAqB;AACnBX,EAAAA,KAAK,EAAEN,SAAS,CAACkB,UAAV,CAAqBC,KAArB,EAA4BC,UADhB;AAEnBb,EAAAA,UAAU,EAAEP,SAAS,CAACqB,IAAV,CAAeD;AAFR,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCjB,EAAAA,KAAK,EAAEiB,KAAK,CAACjB;AADmB,CAAL,CAA7B;;AAIA,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,UAAU,EAAEmB,IAAI,IAAI;AAAED,IAAAA,QAAQ,CAACrB,UAAU,CAACsB,IAAD,CAAX,CAAR;AAA6B;AADb,CAAL,CAAnC;;AAIA,eAAe3B,OAAO,CAACuB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classes from './BookList.module.css';\nimport Book from '../components/Book/Book';\nimport Aux from '../HOC/Aux';\nimport { removeBook } from '../actions/index';\n\nconst bookList = ({ books, deleteBook, categories }) => {\n  const handleRemoveBook = book => deleteBook(book);\n\n  return (\n    <Aux>\n      <div className={classes.Filter}>\n        <p>Select books by category</p>\n        <select id=\"category\" value=\"Learning\" onChange={this.handleChange}>\n          {\n            categories.map(option => (\n              <option\n                key={option}\n                value={option}\n              >\n                {option}\n              </option>\n            ))\n          }\n        </select>\n      </div>\n      <table className={classes.BookList}>\n        <tbody>\n          <tr>\n            <th>Book ID</th>\n            <th>Title</th>\n            <th>Category</th>\n            <th>Remove</th>\n          </tr>\n          {books.map(book => (\n            <Book\n              key={book.id}\n              bookItem={book}\n              clicked={() => handleRemoveBook(book)}\n            />\n          ))}\n        </tbody>\n      </table>\n    </Aux>\n  );\n};\n\nbookList.propTypes = {\n  books: PropTypes.instanceOf(Array).isRequired,\n  deleteBook: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  books: state.books,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteBook: data => { dispatch(removeBook(data)); },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(bookList);\n"]},"metadata":{},"sourceType":"module"}