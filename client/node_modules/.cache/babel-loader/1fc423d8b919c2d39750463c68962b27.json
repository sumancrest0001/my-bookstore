{"ast":null,"code":"var _jsxFileName = \"/home/suman/react-projects/redux/my-bookstore/src/container/AdminContainers/BookForm/BooksForm.js\";\nimport React, { Component } from 'react';\nimport { firestore } from '../../../firebase/index';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { storage } from '../../../firebase/index';\nimport { createBook } from '../../../redux/actions/index';\nimport './BooksForm.scss';\n\nclass BookForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        book\n      } = this.state;\n      const updatedBook = book;\n      updatedBook[event.target.id] = event.target.value;\n      this.setState({\n        book: updatedBook\n      });\n    };\n\n    this.handleFileChange = event => {\n      if (event.target.files[0]) {\n        const {\n          book\n        } = this.state;\n        let updatedBook = book;\n        updatedBook = { ...updatedBook,\n          image: event.target.files[0]\n        };\n        this.setState({\n          book: updatedBook\n        });\n      }\n    };\n\n    this.handleSubmit = () => {\n      const {\n        book\n      } = this.state;\n      const uploadImage = storage.ref(`images/${book.image.name}`).put(book.image);\n      uploadImage.on('state_changed', snapshot => {\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        this.setState({\n          progress\n        });\n      }, error => {\n        console.log(error);\n      }, () => {\n        storage.ref('images').child(book.image.name).getDownloadURL().then(bookImageUrl => {\n          const {\n            book\n          } = this.state;\n          const updatedBook = { ...book,\n            url: bookImageUrl\n          };\n          this.setState({\n            book: updatedBook\n          });\n          const books = [book];\n          const collectionRef = firestore.collection('books');\n          collectionRef.doc(`${book.category}`).set(books);\n        });\n      });\n    };\n\n    this.state = {\n      book: {\n        isbn: '',\n        title: '',\n        description: '',\n        category: '',\n        author: '',\n        publisher: '',\n        price: '',\n        image: '',\n        status: '',\n        url: ''\n      },\n      progress: 0\n    };\n  }\n\n  render() {\n    const {\n      book,\n      progress\n    } = this.state;\n    const {\n      isbn,\n      title,\n      description,\n      category,\n      author,\n      publisher,\n      price,\n      status\n    } = book;\n    const {\n      categories,\n      bookCondition\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"Add new to Bookstore\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"isbn\",\n      className: \"Input InputFields\",\n      placeholder: \"ISBN number\",\n      value: isbn,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"Input InputFields Text\",\n      id: \"title\",\n      placeholder: \"Enter Book Title\",\n      type: \"text\",\n      value: title,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"textarea\",\n      id: \"description\",\n      rows: \"5\",\n      className: \"Input, InputFields, Text\",\n      placeholder: \"Add short description\",\n      value: description,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"Select, InputFields, classes.Text\",\n      id: \"category\",\n      value: category,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, categories.map(option => /*#__PURE__*/React.createElement(\"option\", {\n      key: option,\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, option))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"author\",\n      className: \"Input InputFields Text\",\n      placeholder: \"Author please\",\n      value: author,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"publisher\",\n      className: \"Input InputFields Text\",\n      placeholder: \"Publishername\",\n      value: publisher,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      step: \"0.01\",\n      id: \"price\",\n      className: \"Input InputFields Text\",\n      placeholder: \"Enter price\",\n      value: price,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"Select InputFields Text\",\n      id: \"status\",\n      value: status,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, bookCondition.map(option => /*#__PURE__*/React.createElement(\"option\", {\n      key: option,\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, option))), /*#__PURE__*/React.createElement(\"progress\", {\n      value: progress,\n      max: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleFileChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Button SaveBtn\",\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, \"SAVE BOOK\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addBook: data => {\n    dispatch(createBook(data));\n  }\n});\n\nBookForm.propTypes = {\n  addBook: PropTypes.func.isRequired,\n  categories: PropTypes.instanceOf(Array).isRequired,\n  bookCondition: PropTypes.instanceOf(Array).isRequired\n};\nexport default connect(null, mapDispatchToProps)(BookForm);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/src/container/AdminContainers/BookForm/BooksForm.js"],"names":["React","Component","firestore","PropTypes","connect","storage","createBook","BookForm","constructor","props","handleChange","event","book","state","updatedBook","target","id","value","setState","handleFileChange","files","image","handleSubmit","uploadImage","ref","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","bookImageUrl","url","books","collectionRef","collection","doc","category","set","isbn","title","description","author","publisher","price","status","render","categories","bookCondition","map","option","mapDispatchToProps","dispatch","addBook","data","propTypes","func","isRequired","instanceOf","Array"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { firestore } from '../../../firebase/index';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { storage } from '../../../firebase/index';\nimport { createBook } from '../../../redux/actions/index';\nimport './BooksForm.scss';\n\nclass BookForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      book: {\n        isbn: '',\n        title: '',\n        description: '',\n        category: '',\n        author: '',\n        publisher: '',\n        price: '',\n        image: '',\n        status: '',\n        url: '',\n      },\n      progress: 0,\n    };\n  }\n\n  handleChange = event => {\n    const { book } = this.state;\n    const updatedBook = book;\n    updatedBook[event.target.id] = event.target.value;\n    this.setState({ book: updatedBook });\n  };\n\n  handleFileChange = event => {\n    if (event.target.files[0]) {\n      const { book } = this.state;\n      let updatedBook = book;\n      updatedBook = {\n        ...updatedBook,\n        image: event.target.files[0],\n      };\n      this.setState({ book: updatedBook });\n    }\n  };\n\n  handleSubmit = () => {\n    const { book } = this.state;\n    const uploadImage = storage.ref(`images/${book.image.name}`).put(book.image);\n    uploadImage.on('state_changed',\n      snapshot => {\n        const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n        this.setState({ progress });\n      },\n      error => {\n        console.log(error);\n      },\n      () => {\n        storage.ref('images').child(book.image.name).getDownloadURL().then(bookImageUrl => {\n          const { book } = this.state;\n          const updatedBook = {\n            ...book,\n            url: bookImageUrl,\n          };\n          this.setState({ book: updatedBook });\n          const books = [book];\n          const collectionRef = firestore.collection('books');\n          collectionRef.doc(`${book.category}`).set(books);\n        });\n      });\n  };\n\n  render() {\n    const { book, progress } = this.state;\n    const {\n      isbn, title, description, category, author, publisher, price, status,\n    } = book;\n    const { categories, bookCondition } = this.props;\n    return (\n      <div className=\"Form\">\n        <h3 className=\"Title\">Add new to Bookstore</h3>\n        <form>\n          <input\n            type=\"number\"\n            id=\"isbn\"\n            className=\"Input InputFields\"\n            placeholder=\"ISBN number\"\n            value={isbn}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            className=\"Input InputFields Text\"\n            id=\"title\"\n            placeholder=\"Enter Book Title\"\n            type=\"text\"\n            value={title}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"textarea\"\n            id=\"description\"\n            rows=\"5\"\n            className=\"Input, InputFields, Text\"\n            placeholder=\"Add short description\"\n            value={description}\n            onChange={this.handleChange}\n            required\n          />\n          <select\n            className=\"Select, InputFields, classes.Text\"\n            id=\"category\"\n            value={category}\n            onChange={this.handleChange}\n          >\n            {\n              categories.map(option => (\n                <option\n                  key={option}\n                  value={option}\n                >\n                  {option}\n                </option>\n              ))\n            }\n          </select>\n          <input\n            type=\"text\"\n            id=\"author\"\n            className=\"Input InputFields Text\"\n            placeholder=\"Author please\"\n            value={author}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"text\"\n            id=\"publisher\"\n            className=\"Input InputFields Text\"\n            placeholder=\"Publishername\"\n            value={publisher}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"number\"\n            step=\"0.01\"\n            id=\"price\"\n            className=\"Input InputFields Text\"\n            placeholder=\"Enter price\"\n            value={price}\n            onChange={this.handleChange}\n            required\n          />\n          <select\n            className=\"Select InputFields Text\"\n            id=\"status\"\n            value={status}\n            onChange={this.handleChange}\n          >\n            {\n              bookCondition.map(option => (\n                <option\n                  key={option}\n                  value={option}\n                >\n                  {option}\n                </option>\n              ))\n            }\n          </select>\n          <progress value={progress} max=\"100\" />\n          <input\n            type=\"file\"\n            onChange={this.handleFileChange}\n            required\n          />\n          <button\n            className=\"Button SaveBtn\"\n            type=\"button\"\n            onClick={this.handleSubmit}\n          >\n            SAVE BOOK\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addBook: data => { dispatch(createBook(data)); },\n});\n\nBookForm.propTypes = {\n  addBook: PropTypes.func.isRequired,\n  categories: PropTypes.instanceOf(Array).isRequired,\n  bookCondition: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(BookForm);\n"]},"metadata":{},"sourceType":"module"}