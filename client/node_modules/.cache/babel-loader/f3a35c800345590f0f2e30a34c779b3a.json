{"ast":null,"code":"const category = ['Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\nconst bookStatus = ['brand new', 'used'];\n\nconst updateHomePageStore = availableBooks => {\n  const keys = Object.keys(availableBooks);\n  const shuffled = keys.sort(() => 0.5 - Math.random());\n  const selectedKeys = shuffled.slice(0, 6);\n  const selectedBooks = selectedKeys.map(bookKey => availableBooks[bookKey]);\n  return selectedBooks;\n};\n\nconst updateBookState = (books, filter) => {\n  let filteredBooks;\n\n  if (filter === 'all') {\n    filteredBooks = books;\n  } else if (filter === 'used' || filter === 'brand new') {\n    books.forEach(book => {\n      if (book.status === filter) {\n        filteredBooks.push(book);\n      }\n    });\n  } else {\n    books.forEach(book => {\n      if (book.category === filter) {\n        filteredBooks.push(book);\n      }\n    });\n  }\n\n  return filteredBooks;\n};\n\nconst bookFilter = (books, filter) => {\n  console.log(books);\n  let filteredBooks;\n\n  if (filter === 'used' || filter === 'brand new') {\n    books.forEach(book => {\n      if (book.status === filter) {\n        filteredBooks.push(book);\n      }\n    });\n  }\n\n  books.forEach(book => {\n    if (book.category === filter) {\n      filteredBooks.push(book);\n    }\n  });\n  return filteredBooks;\n};\n\nexport { category, bookStatus, updateHomePageStore, bookFilter, updateBookState };","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/src/utilities/utility.js"],"names":["category","bookStatus","updateHomePageStore","availableBooks","keys","Object","shuffled","sort","Math","random","selectedKeys","slice","selectedBooks","map","bookKey","updateBookState","books","filter","filteredBooks","forEach","book","status","push","bookFilter","console","log"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,CAAC,QAAD,EAAW,WAAX,EAAwB,SAAxB,EAAmC,QAAnC,EAA6C,MAA7C,EAAqD,UAArD,EAAiE,QAAjE,CAAjB;AACA,MAAMC,UAAU,GAAG,CAAC,WAAD,EAAc,MAAd,CAAnB;;AACA,MAAMC,mBAAmB,GAAGC,cAAc,IAAI;AAC5C,QAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,cAAZ,CAAb;AACA,QAAMG,QAAQ,GAAGF,IAAI,CAACG,IAAL,CAAU,MAAM,MAAMC,IAAI,CAACC,MAAL,EAAtB,CAAjB;AACA,QAAMC,YAAY,GAAGJ,QAAQ,CAACK,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAArB;AACA,QAAMC,aAAa,GAAGF,YAAY,CAACG,GAAb,CAAiBC,OAAO,IAAIX,cAAc,CAACW,OAAD,CAA1C,CAAtB;AACA,SAAOF,aAAP;AACD,CAND;;AAQA,MAAMG,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzC,MAAIC,aAAJ;;AACA,MAAID,MAAM,KAAK,KAAf,EAAsB;AACpBC,IAAAA,aAAa,GAAGF,KAAhB;AACD,GAFD,MAEO,IAAIC,MAAM,KAAK,MAAX,IAAqBA,MAAM,KAAK,WAApC,EAAiD;AACtDD,IAAAA,KAAK,CAACG,OAAN,CAAcC,IAAI,IAAI;AACpB,UAAIA,IAAI,CAACC,MAAL,KAAgBJ,MAApB,EAA4B;AAC1BC,QAAAA,aAAa,CAACI,IAAd,CAAmBF,IAAnB;AACD;AACF,KAJD;AAKD,GANM,MAMA;AACLJ,IAAAA,KAAK,CAACG,OAAN,CAAcC,IAAI,IAAI;AACpB,UAAIA,IAAI,CAACpB,QAAL,KAAkBiB,MAAtB,EAA8B;AAC5BC,QAAAA,aAAa,CAACI,IAAd,CAAmBF,IAAnB;AACD;AACF,KAJD;AAKD;;AACD,SAAOF,aAAP;AACD,CAlBD;;AAqBA,MAAMK,UAAU,GAAG,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACpCO,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,MAAIE,aAAJ;;AACA,MAAID,MAAM,KAAK,MAAX,IAAqBA,MAAM,KAAK,WAApC,EAAiD;AAC/CD,IAAAA,KAAK,CAACG,OAAN,CAAcC,IAAI,IAAI;AACpB,UAAIA,IAAI,CAACC,MAAL,KAAgBJ,MAApB,EAA4B;AAC1BC,QAAAA,aAAa,CAACI,IAAd,CAAmBF,IAAnB;AACD;AACF,KAJD;AAKD;;AACDJ,EAAAA,KAAK,CAACG,OAAN,CAAcC,IAAI,IAAI;AACpB,QAAIA,IAAI,CAACpB,QAAL,KAAkBiB,MAAtB,EAA8B;AAC5BC,MAAAA,aAAa,CAACI,IAAd,CAAmBF,IAAnB;AACD;AACF,GAJD;AAKA,SAAOF,aAAP;AACD,CAhBD;;AAkBA,SACElB,QADF,EACYC,UADZ,EACwBC,mBADxB,EAC6CqB,UAD7C,EACyDR,eADzD","sourcesContent":["const category = ['Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\nconst bookStatus = ['brand new', 'used'];\nconst updateHomePageStore = availableBooks => {\n  const keys = Object.keys(availableBooks);\n  const shuffled = keys.sort(() => 0.5 - Math.random());\n  const selectedKeys = shuffled.slice(0, 6);\n  const selectedBooks = selectedKeys.map(bookKey => availableBooks[bookKey]);\n  return selectedBooks;\n};\n\nconst updateBookState = (books, filter) => {\n  let filteredBooks;\n  if (filter === 'all') {\n    filteredBooks = books;\n  } else if (filter === 'used' || filter === 'brand new') {\n    books.forEach(book => {\n      if (book.status === filter) {\n        filteredBooks.push(book);\n      }\n    });\n  } else {\n    books.forEach(book => {\n      if (book.category === filter) {\n        filteredBooks.push(book);\n      }\n    });\n  }\n  return filteredBooks;\n};\n\n\nconst bookFilter = (books, filter) => {\n  console.log(books);\n  let filteredBooks;\n  if (filter === 'used' || filter === 'brand new') {\n    books.forEach(book => {\n      if (book.status === filter) {\n        filteredBooks.push(book);\n      }\n    });\n  }\n  books.forEach(book => {\n    if (book.category === filter) {\n      filteredBooks.push(book);\n    }\n  });\n  return filteredBooks;\n};\n\nexport {\n  category, bookStatus, updateHomePageStore, bookFilter, updateBookState,\n};\n"]},"metadata":{},"sourceType":"module"}