{"ast":null,"code":"var _jsxFileName = \"/home/suman/react-projects/redux/my-bookstore/src/container/AdminContainers/AdminMainContainer/AdminMainContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport BookList from '../BookList/BookList';\nimport BookForm from '../BookForm/BooksForm';\nimport CategoryFilter from '../../../components/CategoryFilter/CategoryFilter';\nimport { category, bookStatus } from '../../../utilities/utility';\nimport { removeBook, filterBooks } from '../../../actions/index';\n\nconst adminMainContainer = props => {\n  const {\n    books,\n    deleteBook,\n    filter,\n    categoryFilter,\n    match,\n    admin\n  } = props;\n\n  const filteredBooks = () => {\n    let updatedBooks;\n\n    if (filter === 'All') {\n      updatedBooks = books;\n    } else {\n      updatedBooks = books.filter(book => book.category === filter);\n    }\n\n    return updatedBooks;\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CategoryFilter, {\n    bookCategories: category,\n    categoryHandler: filteredCategory => categoryFilter(filteredCategory),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/auth/new-book\",\n    exact: true,\n    render: props => /*#__PURE__*/React.createElement(BookForm, {\n      bookCondition: bookStatus,\n      categories: category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 63\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: match.path,\n    exact: true,\n    render: props => /*#__PURE__*/React.createElement(BookList, Object.assign({}, props, {\n      deleteBook: deleteBook,\n      availableBooks: books,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 59\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteBook: data => {\n    dispatch(removeBook(data));\n  },\n  categoryFilter: category => {\n    dispatch(filterBooks(category));\n  }\n});\n\nadminMainContainer.propTypes = {\n  admin: PropTypes.bool.isRequired,\n  books: PropTypes.instanceOf(Array).isRequired,\n  deleteBook: PropTypes.func.isRequired,\n  categoryFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  match: PropTypes.instanceOf(Object).isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(adminMainContainer);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/src/container/AdminContainers/AdminMainContainer/AdminMainContainer.js"],"names":["React","connect","Route","Switch","PropTypes","BookList","BookForm","CategoryFilter","category","bookStatus","removeBook","filterBooks","adminMainContainer","props","books","deleteBook","filter","categoryFilter","match","admin","filteredBooks","updatedBooks","book","filteredCategory","path","mapStateToProps","state","mapDispatchToProps","dispatch","data","propTypes","bool","isRequired","instanceOf","Array","func","string","Object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport BookList from '../BookList/BookList';\nimport BookForm from '../BookForm/BooksForm';\nimport CategoryFilter from '../../../components/CategoryFilter/CategoryFilter';\nimport { category, bookStatus } from '../../../utilities/utility';\nimport { removeBook, filterBooks } from '../../../actions/index';\n\nconst adminMainContainer = props => {\n  const {\n    books, deleteBook, filter, categoryFilter, match, admin\n  } = props;\n\n  const filteredBooks = () => {\n    let updatedBooks;\n    if (filter === 'All') {\n      updatedBooks = books;\n    } else {\n      updatedBooks = books.filter(book => book.category === filter);\n    }\n    return updatedBooks;\n  };\n\n  return (\n    <main>\n      <CategoryFilter\n        bookCategories={category}\n        categoryHandler={filteredCategory => categoryFilter(filteredCategory)}\n      />\n      <Switch>\n        <Route path=\"/auth/new-book\" exact render={(props) => <BookForm bookCondition={bookStatus} categories={category} />} />\n        <Route path={match.path} exact render={(props) => <BookList {...props} deleteBook={deleteBook} availableBooks={books} />} />\n      </Switch>\n    </main>\n  );\n};\n\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteBook: data => { dispatch(removeBook(data)); },\n  categoryFilter: category => { dispatch(filterBooks(category)); },\n});\n\n\nadminMainContainer.propTypes = {\n  admin: PropTypes.bool.isRequired,\n  books: PropTypes.instanceOf(Array).isRequired,\n  deleteBook: PropTypes.func.isRequired,\n  categoryFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  match: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(adminMainContainer);\n"]},"metadata":{},"sourceType":"module"}