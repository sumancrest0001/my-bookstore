{"ast":null,"code":"import{createSelector}from'reselect';var selectCart=function selectCart(state){return state.cart;};export var selectCartHidden=createSelector([selectCart],function(cart){return cart.hidden;});export var selectCartItems=createSelector([selectCart],function(cart){return cart.cartItems;});export var selectCartItemsCount=createSelector([selectCartItems],function(cartItems){return cartItems.reduce(function(accumulatedQuantity,cartItem){return accumulatedQuantity+cartItem.quantity;},0);});export var selectCartTotal=createSelector([selectCartItems],function(cartItems){return cartItems.reduce(function(accumulatedTotal,cartItem){return accumulatedTotal+cartItem.quantity*cartItem.price;},0);});","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/src/redux/reducers/cart.selector.js"],"names":["createSelector","selectCart","state","cart","selectCartHidden","hidden","selectCartItems","cartItems","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","accumulatedTotal","price"],"mappings":"AAAA,OAASA,cAAT,KAA+B,UAA/B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAV,EAAxB,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAGJ,cAAc,CAC5C,CAACC,UAAD,CAD4C,CAE5C,SAAAE,IAAI,QAAIA,CAAAA,IAAI,CAACE,MAAT,EAFwC,CAAvC,CAKP,MAAO,IAAMC,CAAAA,eAAe,CAAGN,cAAc,CAC3C,CAACC,UAAD,CAD2C,CAE3C,SAAAE,IAAI,QAAIA,CAAAA,IAAI,CAACI,SAAT,EAFuC,CAAtC,CAKP,MAAO,IAAMC,CAAAA,oBAAoB,CAAGR,cAAc,CAChD,CAACM,eAAD,CADgD,CAEhD,SAAAC,SAAS,QAAIA,CAAAA,SAAS,CAACE,MAAV,CAAiB,SAACC,mBAAD,CAAsBC,QAAtB,QAAmCD,CAAAA,mBAAmB,CAAGC,QAAQ,CAACC,QAAlE,EAAjB,CAA6F,CAA7F,CAAJ,EAFuC,CAA3C,CAKP,MAAO,IAAMC,CAAAA,eAAe,CAAGb,cAAc,CAC3C,CAACM,eAAD,CAD2C,CAE3C,SAAAC,SAAS,QAAIA,CAAAA,SAAS,CAACE,MAAV,CAAiB,SAACK,gBAAD,CAAmBH,QAAnB,QAAgCG,CAAAA,gBAAgB,CAAGH,QAAQ,CAACC,QAAT,CAAoBD,QAAQ,CAACI,KAAhF,EAAjB,CAAwG,CAAxG,CAAJ,EAFkC,CAAtC","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartHidden = createSelector(\n  [selectCart],\n  cart => cart.hidden,\n);\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  cart => cart.cartItems,\n);\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0),\n);\n\nexport const selectCartTotal = createSelector(\n  [selectCartItems],\n  cartItems => cartItems.reduce((accumulatedTotal, cartItem) => accumulatedTotal + cartItem.quantity * cartItem.price, 0),\n);\n"]},"metadata":{},"sourceType":"module"}