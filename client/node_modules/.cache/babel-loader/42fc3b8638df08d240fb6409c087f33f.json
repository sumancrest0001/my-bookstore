{"ast":null,"code":"var _jsxFileName = \"/home/suman/react-projects/redux/my-bookstore/client/src/components/BookDetails/BookDetails.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../CustomButton/CustomButton';\nimport './BookDetails.scss';\nimport book1 from '../../images/book1.jpg';\nimport { bookFilter } from '../../redux/actions/book.actions';\n\nclass BookDetails extends Component {\n  componentDidMount() {\n    const {\n      match,\n      filterSelectedBook,\n      selectedBook\n    } = this.props;\n    filterSelectedBook(match.params.id);\n    console.log(selectedBook);\n    /*     const collectionRef = firestore.collection(\"books\").doc(match.params.id);\n        collectionRef.get()\n          .then(doc => console.log(doc.data()))\n          .catch(error => console.log(error)); */\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (!this.props.selectedBook || this.props.selectedBook.id !== this.props.match.params.id) {\n      console.log('not rerendered');\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    const {\n      selectedBook,\n      admin\n    } = this.props;\n\n    const addCartDetails = () => {\n      if (!admin) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"book-details__cart\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"book-details__price-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }\n        }, \"Book Price\"), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"book-details__price\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }\n        }, \"Rs \", bookToDisplay.price), /*#__PURE__*/React.createElement(CustomButton, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }\n        }, \"Add to Cart\"), /*#__PURE__*/React.createElement(CustomButton, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }\n        }, \"Add to Favorite\"));\n      }\n    };\n\n    let elementsToRender = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 28\n      }\n    }, \"Loading ...\");\n\n    if (selectedBook.length > 0) {\n      const bookToDisplay = selectedBook[0];\n      elementsToRender = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"book-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: bookToDisplay.url,\n        className: \"book-details__image\",\n        alt: \"book cover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"book-details__head head\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"head__title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, bookToDisplay.title), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"head__author\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, \"By \", bookToDisplay.author), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"head__publication\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, \"Published by: \", bookToDisplay.publication), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"head__status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, \"Book status: \", bookToDisplay.status)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"book-details__description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, bookToDisplay.description));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, elementsToRender);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  filterSelectedBook: bookID => {\n    dispatch(bookFilter(bookID));\n  }\n});\n\nconst mapStateToProps = state => ({\n  selectedBook: state.book.currentBook\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookDetails);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/client/src/components/BookDetails/BookDetails.js"],"names":["React","Component","connect","CustomButton","book1","bookFilter","BookDetails","componentDidMount","match","filterSelectedBook","selectedBook","props","params","id","console","log","shouldComponentUpdate","nextProps","nextState","render","admin","addCartDetails","bookToDisplay","price","elementsToRender","length","url","title","author","publication","status","description","mapDispatchToProps","dispatch","bookID","mapStateToProps","state","book","currentBook"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../CustomButton/CustomButton';\nimport './BookDetails.scss';\nimport book1 from '../../images/book1.jpg';\nimport { bookFilter } from '../../redux/actions/book.actions';\n\nclass BookDetails extends Component {\n  componentDidMount() {\n    const { match, filterSelectedBook, selectedBook } = this.props;\n    filterSelectedBook(match.params.id);\n    console.log(selectedBook);\n    /*     const collectionRef = firestore.collection(\"books\").doc(match.params.id);\n        collectionRef.get()\n          .then(doc => console.log(doc.data()))\n          .catch(error => console.log(error)); */\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    if (!this.props.selectedBook || (this.props.selectedBook.id !== this.props.match.params.id)) {\n      console.log('not rerendered');\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  render() {\n    const { selectedBook, admin } = this.props;\n    const addCartDetails = () => {\n      if (!admin) {\n        return (<div className=\"book-details__cart\">\n          <h3 className=\"book-details__price-title\">Book Price</h3>\n          <p className=\"book-details__price\">Rs {bookToDisplay.price}</p>\n          <CustomButton>Add to Cart</CustomButton>\n          <CustomButton>Add to Favorite</CustomButton>\n        </div>)\n      }\n    }\n    let elementsToRender = <div>Loading ...</div>;\n    if (selectedBook.length > 0) {\n      const bookToDisplay = selectedBook[0];\n      elementsToRender = (<div className=\"book-details\">\n        <img src={bookToDisplay.url} className=\"book-details__image\" alt=\"book cover\" />\n        <div className=\"book-details__head head\">\n          <h3 className=\"head__title\">{bookToDisplay.title}</h3>\n          <p className=\"head__author\">By {bookToDisplay.author}</p>\n          <p className=\"head__publication\">Published by: {bookToDisplay.publication}</p>\n          <p className=\"head__status\">Book status: {bookToDisplay.status}</p>\n        </div>\n\n        <p className=\"book-details__description\">{bookToDisplay.description}</p>\n      </div>);\n    }\n\n    return (\n      <>\n        {elementsToRender}\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  filterSelectedBook: bookID => { dispatch(bookFilter(bookID)); },\n});\n\nconst mapStateToProps = state => ({\n  selectedBook: state.book.currentBook,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookDetails);\n"]},"metadata":{},"sourceType":"module"}