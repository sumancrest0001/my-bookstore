{"ast":null,"code":"var _jsxFileName = \"/home/suman/react-projects/redux/my-bookstore/src/container/AdminContainers/AdminMainContainer/AdminMainContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport BookList from '../BookList/BookList';\nimport BookForm from '../BookForm/BooksForm';\nimport CategoryFilter from '../../../components/CategoryFilter/CategoryFilter';\nimport { category, bookStatus } from '../../../utilities/utility';\nimport { removeBook, filterBooks } from '../../../actions/index';\n\nclass AdminMainContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.filteredBooks = () => {\n      const {\n        filter,\n        books\n      } = this.props;\n      let updatedBooks;\n\n      if (filter === 'All') {\n        updatedBooks = books;\n      } else {\n        updatedBooks = books.filter(book => book.category === filter);\n      }\n\n      return updatedBooks;\n    };\n  }\n\n  render() {\n    const {\n      books,\n      deleteBook,\n      categoryFilter\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Admin page\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteBook: data => {\n    dispatch(removeBook(data));\n  },\n  categoryFilter: category => {\n    dispatch(filterBooks(category));\n  }\n});\n\nAdminMainContainer.propTypes = {\n  books: PropTypes.instanceOf(Array).isRequired,\n  deleteBook: PropTypes.func.isRequired,\n  categoryFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminMainContainer);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/src/container/AdminContainers/AdminMainContainer/AdminMainContainer.js"],"names":["React","Component","connect","PropTypes","BookList","BookForm","CategoryFilter","category","bookStatus","removeBook","filterBooks","AdminMainContainer","filteredBooks","filter","books","props","updatedBooks","book","render","deleteBook","categoryFilter","mapStateToProps","state","mapDispatchToProps","dispatch","data","propTypes","instanceOf","Array","isRequired","func","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,4BAArC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,wBAAxC;;AAEA,MAAMC,kBAAN,SAAiCV,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACzCW,aADyC,GACzB,MAAM;AACpB,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAoB,KAAKC,KAA/B;AACA,UAAIC,YAAJ;;AACA,UAAIH,MAAM,KAAK,KAAf,EAAsB;AACpBG,QAAAA,YAAY,GAAGF,KAAf;AACD,OAFD,MAEO;AACLE,QAAAA,YAAY,GAAGF,KAAK,CAACD,MAAN,CAAaI,IAAI,IAAIA,IAAI,CAACV,QAAL,KAAkBM,MAAvC,CAAf;AACD;;AACD,aAAOG,YAAP;AACD,KAVwC;AAAA;;AAYzCE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,KAAF;AAASK,MAAAA,UAAT;AAAqBC,MAAAA;AAArB,QAAwC,KAAKL,KAAnD;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF,CADF;AAiBD;;AA/BwC;;AAkC3C,MAAMM,eAAe,GAAGC,KAAK,KAAK;AAChCR,EAAAA,KAAK,EAAEQ,KAAK,CAACR,KADmB;AAEhCD,EAAAA,MAAM,EAAES,KAAK,CAACT;AAFkB,CAAL,CAA7B;;AAKA,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACtCL,EAAAA,UAAU,EAAEM,IAAI,IAAI;AAAED,IAAAA,QAAQ,CAACf,UAAU,CAACgB,IAAD,CAAX,CAAR;AAA6B,GADb;AAEtCL,EAAAA,cAAc,EAAEb,QAAQ,IAAI;AAAEiB,IAAAA,QAAQ,CAACd,WAAW,CAACH,QAAD,CAAZ,CAAR;AAAkC;AAF1B,CAAL,CAAnC;;AAMAI,kBAAkB,CAACe,SAAnB,GAA+B;AAC7BZ,EAAAA,KAAK,EAAEX,SAAS,CAACwB,UAAV,CAAqBC,KAArB,EAA4BC,UADN;AAE7BV,EAAAA,UAAU,EAAEhB,SAAS,CAAC2B,IAAV,CAAeD,UAFE;AAG7BT,EAAAA,cAAc,EAAEjB,SAAS,CAAC2B,IAAV,CAAeD,UAHF;AAI7BhB,EAAAA,MAAM,EAAEV,SAAS,CAAC4B,MAAV,CAAiBF;AAJI,CAA/B;AAOA,eAAe3B,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,kBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport BookList from '../BookList/BookList';\nimport BookForm from '../BookForm/BooksForm';\nimport CategoryFilter from '../../../components/CategoryFilter/CategoryFilter';\nimport { category, bookStatus } from '../../../utilities/utility';\nimport { removeBook, filterBooks } from '../../../actions/index';\n\nclass AdminMainContainer extends Component {\n  filteredBooks = () => {\n    const { filter, books } = this.props;\n    let updatedBooks;\n    if (filter === 'All') {\n      updatedBooks = books;\n    } else {\n      updatedBooks = books.filter(book => book.category === filter);\n    }\n    return updatedBooks;\n  };\n\n  render() {\n    const { books, deleteBook, categoryFilter } = this.props;\n    return (\n      <main>\n        {/* <CategoryFilter\n          bookCategories={category}\n          categoryHandler={filteredCategory => categoryFilter(filteredCategory)}\n        />\n        <BookList\n          deleteBook={deleteBook}\n          availableBooks={books}\n        />\n        <BookForm\n          status={bookStatus}\n          categories={category}\n        /> */}\n        <div>Admin page</div>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteBook: data => { dispatch(removeBook(data)); },\n  categoryFilter: category => { dispatch(filterBooks(category)); },\n});\n\n\nAdminMainContainer.propTypes = {\n  books: PropTypes.instanceOf(Array).isRequired,\n  deleteBook: PropTypes.func.isRequired,\n  categoryFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminMainContainer);\n"]},"metadata":{},"sourceType":"module"}