{"ast":null,"code":"var _jsxFileName = \"/home/suman/react-projects/redux/my-bookstore/src/container/AdminContainers/BookForm/BooksForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createBook } from '../../../actions/index';\nimport classes from './BooksForm.module.css';\n\nclass BookForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        book\n      } = this.state;\n      const updatedBook = book;\n      updatedBook[event.target.id] = event.target.value;\n      this.setState({\n        book: updatedBook\n      });\n    };\n\n    this.handleSubmit = () => {\n      const {\n        addBook\n      } = this.props;\n      const book = { ...this.state,\n        id: Math.random()\n      };\n      addBook(book);\n      this.setState({\n        title: '',\n        category: ''\n      });\n    };\n\n    this.state = {\n      book: {\n        isbn: null,\n        title: '',\n        description: '',\n        category: '',\n        genre: '',\n        author: '',\n        publisher: '',\n        price: '',\n        image: '',\n        status: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      book\n    } = this.state;\n    const {\n      isbn,\n      title,\n      description,\n      category,\n      genre,\n      author,\n      publisher,\n      price,\n      image,\n      status\n    } = book;\n    const {\n      categories,\n      bookCondition\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.Title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"Add new to Bookstore\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"isbn\",\n      className: [classes.Input, classes.InputFields, classes.Text].join(' '),\n      placeholder: \"ISBN number\",\n      value: isbn,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: [classes.Input, classes.InputFields, classes.Text].join(' '),\n      id: \"title\",\n      placeholder: \"Enter Book Title\",\n      type: \"text\",\n      value: title,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"textarea\",\n      id: \"description\",\n      className: [classes.Input, classes.InputFields, classes.Text].join(' '),\n      placeholder: \"Add short description\",\n      value: description,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: [classes.Select, classes.InputFields, classes.Text].join(' '),\n      id: \"category\",\n      value: category,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, categories.map(option => /*#__PURE__*/React.createElement(\"option\", {\n      key: option,\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, option))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"genre\",\n      className: [classes.Input, classes.InputFields, classes.Text].join(' '),\n      placeholder: \"Add genre\",\n      value: genre,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"author\",\n      className: [classes.Input, classes.InputFields, classes.Text].join(' '),\n      placeholder: \"Author please\",\n      value: author,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"publisher\",\n      className: [classes.Input, classes.InputFields, classes.Text].join(' '),\n      placeholder: \"Publishername\",\n      value: publisher,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      step: \"0.01\",\n      id: \"price\",\n      className: [classes.Input, classes.InputFields, classes.Text].join(' '),\n      placeholder: \"Enter price\",\n      value: price,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: [classes.Select, classes.InputFields, classes.Text].join(' '),\n      id: \"status\",\n      value: status,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, bookCondition.map(option => /*#__PURE__*/React.createElement(\"option\", {\n      key: option,\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, option))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"image\",\n      value: image,\n      onChange: this.onFileChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: [classes.Button, classes.SaveBtn].join(' '),\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, \"SAVE BOOK\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addBook: data => {\n    dispatch(createBook(data));\n  }\n});\n\nBookForm.propTypes = {\n  addBook: PropTypes.func.isRequired,\n  categories: PropTypes.instanceOf(Array).isRequired,\n  bookCondition: PropTypes.instanceOf(Array).isRequired\n};\nexport default connect(null, mapDispatchToProps)(BookForm);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/src/container/AdminContainers/BookForm/BooksForm.js"],"names":["React","Component","PropTypes","connect","createBook","classes","BookForm","constructor","props","handleChange","event","book","state","updatedBook","target","id","value","setState","handleSubmit","addBook","Math","random","title","category","isbn","description","genre","author","publisher","price","image","status","render","categories","bookCondition","Form","Title","Input","InputFields","Text","join","Select","map","option","onFileChange","Button","SaveBtn","mapDispatchToProps","dispatch","data","propTypes","func","isRequired","instanceOf","Array"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createBook } from '../../../actions/index';\nimport classes from './BooksForm.module.css';\n\nclass BookForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      book: {\n        isbn: null,\n        title: '',\n        description: '',\n        category: '',\n        genre: '',\n        author: '',\n        publisher: '',\n        price: '',\n        image: '',\n        status: '',\n      },\n    };\n  }\n\n  handleChange = event => {\n    const { book } = this.state;\n    const updatedBook = book;\n    updatedBook[event.target.id] = event.target.value;\n    this.setState({ book: updatedBook });\n  };\n\n  handleSubmit = () => {\n    const { addBook } = this.props;\n    const book = { ...this.state, id: Math.random() };\n    addBook(book);\n    this.setState({ title: '', category: '' });\n  };\n\n  render() {\n    const { book } = this.state;\n    const {\n      isbn, title, description, category, genre, author, publisher, price, image, status,\n    } = book;\n    const { categories, bookCondition } = this.props;\n    return (\n      <div className={classes.Form}>\n        <h3 className={classes.Title}>Add new to Bookstore</h3>\n        <form>\n          <input\n            type=\"number\"\n            id=\"isbn\"\n            className={[classes.Input, classes.InputFields, classes.Text].join(' ')}\n            placeholder=\"ISBN number\"\n            value={isbn}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            className={[classes.Input, classes.InputFields, classes.Text].join(' ')}\n            id=\"title\"\n            placeholder=\"Enter Book Title\"\n            type=\"text\"\n            value={title}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"textarea\"\n            id=\"description\"\n            className={[classes.Input, classes.InputFields, classes.Text].join(' ')}\n            placeholder=\"Add short description\"\n            value={description}\n            onChange={this.handleChange}\n            required\n          />\n          <select\n            className={[classes.Select, classes.InputFields, classes.Text].join(' ')}\n            id=\"category\"\n            value={category}\n            onChange={this.handleChange}\n          >\n            {\n              categories.map(option => (\n                <option\n                  key={option}\n                  value={option}\n                >\n                  {option}\n                </option>\n              ))\n            }\n          </select>\n          <input\n            type=\"text\"\n            id=\"genre\"\n            className={[classes.Input, classes.InputFields, classes.Text].join(' ')}\n            placeholder=\"Add genre\"\n            value={genre}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"text\"\n            id=\"author\"\n            className={[classes.Input, classes.InputFields, classes.Text].join(' ')}\n            placeholder=\"Author please\"\n            value={author}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"text\"\n            id=\"publisher\"\n            className={[classes.Input, classes.InputFields, classes.Text].join(' ')}\n            placeholder=\"Publishername\"\n            value={publisher}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"number\"\n            step=\"0.01\"\n            id=\"price\"\n            className={[classes.Input, classes.InputFields, classes.Text].join(' ')}\n            placeholder=\"Enter price\"\n            value={price}\n            onChange={this.handleChange}\n            required\n          />\n          <select\n            className={[classes.Select, classes.InputFields, classes.Text].join(' ')}\n            id=\"status\"\n            value={status}\n            onChange={this.handleChange}\n          >\n            {\n              bookCondition.map(option => (\n                <option\n                  key={option}\n                  value={option}\n                >\n                  {option}\n                </option>\n              ))\n            }\n          </select>\n          <input\n            type=\"file\"\n            id=\"image\"\n            value={image}\n            onChange={this.onFileChange}\n            required\n          />\n          <button\n            className={[classes.Button, classes.SaveBtn].join(' ')}\n            type=\"button\"\n            onClick={this.handleSubmit}\n          >\n            SAVE BOOK\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addBook: data => { dispatch(createBook(data)); },\n});\n\nBookForm.propTypes = {\n  addBook: PropTypes.func.isRequired,\n  categories: PropTypes.instanceOf(Array).isRequired,\n  bookCondition: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(BookForm);\n"]},"metadata":{},"sourceType":"module"}