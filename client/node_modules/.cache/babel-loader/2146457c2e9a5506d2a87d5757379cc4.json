{"ast":null,"code":"var _jsxFileName = \"/home/suman/react-projects/redux/my-bookstore/client/src/components/BookDetails/BookDetails.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../CustomButton/CustomButton';\nimport './BookDetails.scss';\nimport book1 from '../../images/book1.jpg';\nimport { bookFilter } from '../../redux/actions/book.actions';\nimport { element } from 'prop-types';\n\nclass BookDetails extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.elementsToRender = () => {\n      const {\n        selectedBook\n      } = this.props;\n      let elements = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 20\n        }\n      }, \"Loading ... \");\n\n      if (selectedBook.length > 0) {\n        elements = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"book-details\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: selectedBook.url,\n          className: \"book-details__image\",\n          alt: \"book cover\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 9\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"book-details__head head\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"head__title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }\n        }, selectedBook.title), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"head__author\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }\n        }, \"By \", selectedBook.author), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"head__publication\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }\n        }, selectedBook.publication), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"head__status\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }\n        }, selectedBook.status)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"book-details__cart\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"book-details__price-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }\n        }, \"Book Price\"), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"book-details__price\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }\n        }, \"Rs \", selectedBook.price), /*#__PURE__*/React.createElement(CustomButton, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }\n        }, \"Add to Cart\"), /*#__PURE__*/React.createElement(CustomButton, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }\n        }, \"Add to Favorite\")), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"book-details__description\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }\n        }, selectedBook.description));\n      }\n\n      return elements;\n    };\n  }\n\n  componentDidMount() {\n    const {\n      match,\n      filterSelectedBook,\n      selectedBook\n    } = this.props;\n    filterSelectedBook(match.params.id);\n    /*     const collectionRef = firestore.collection(\"books\").doc(match.params.id);\n        collectionRef.get()\n          .then(doc => console.log(doc.data()))\n          .catch(error => console.log(error)); */\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.selectedBook.length == 0 || this.props.selectedBook[0].id !== this.props.match.params.id) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return this.elementsToRender;\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  filterSelectedBook: bookID => {\n    dispatch(bookFilter(bookID));\n  }\n});\n\nconst mapStateToProps = state => ({\n  selectedBook: state.book.currentBook\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookDetails);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/client/src/components/BookDetails/BookDetails.js"],"names":["React","Component","connect","CustomButton","book1","bookFilter","element","BookDetails","elementsToRender","selectedBook","props","elements","length","url","title","author","publication","status","price","description","componentDidMount","match","filterSelectedBook","params","id","shouldComponentUpdate","nextProps","nextState","render","mapDispatchToProps","dispatch","bookID","mapStateToProps","state","book","currentBook"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../CustomButton/CustomButton';\nimport './BookDetails.scss';\nimport book1 from '../../images/book1.jpg';\nimport { bookFilter } from '../../redux/actions/book.actions';\nimport { element } from 'prop-types';\n\nclass BookDetails extends Component {\n  componentDidMount() {\n    const { match, filterSelectedBook, selectedBook } = this.props;\n    filterSelectedBook(match.params.id);\n    /*     const collectionRef = firestore.collection(\"books\").doc(match.params.id);\n        collectionRef.get()\n          .then(doc => console.log(doc.data()))\n          .catch(error => console.log(error)); */\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.selectedBook.length == 0 || (this.props.selectedBook[0].id !== this.props.match.params.id)) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  elementsToRender = () => {\n    const { selectedBook } = this.props;\n    let elements = <div>Loading ... </div>;\n    if (selectedBook.length > 0) {\n      elements = (<div className=\"book-details\" >\n        <img src={selectedBook.url} className=\"book-details__image\" alt=\"book cover\" />\n        <div className=\"book-details__head head\">\n          <h3 className=\"head__title\">{selectedBook.title}</h3>\n          <p className=\"head__author\">By {selectedBook.author}</p>\n          <p className=\"head__publication\">{selectedBook.publication}</p>\n          <p className=\"head__status\">{selectedBook.status}</p>\n        </div>\n        <div className=\"book-details__cart\">\n          <h3 className=\"book-details__price-title\">Book Price</h3>\n          <p className=\"book-details__price\">Rs {selectedBook.price}</p>\n          <CustomButton>Add to Cart</CustomButton>\n          <CustomButton>Add to Favorite</CustomButton>\n        </div>\n        <p className=\"book-details__description\">{selectedBook.description}</p>\n      </div>);\n    }\n    return elements;\n  };\n\n  render() {\n    return (\n      this.elementsToRender\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  filterSelectedBook: bookID => { dispatch(bookFilter(bookID)); },\n});\n\nconst mapStateToProps = state => ({\n  selectedBook: state.book.currentBook,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookDetails);\n"]},"metadata":{},"sourceType":"module"}