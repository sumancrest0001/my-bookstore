{"ast":null,"code":"var _jsxFileName = \"/home/suman/react-projects/redux/my-bookstore/client/src/components/AdminComponents/Book/Book.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport CrudButtons from '../../CrudButtons/CrudButtons';\nimport { bookFilter } from '../../../redux/actions/book.actions';\nimport './Book.scss';\n\nconst book = ({\n  bookItem,\n  clicked,\n  history,\n  addCurrentBook\n}) => {\n  const selectedBookHandler = id => {\n    addCurrentBook(id);\n    history.push(`/auth/book/${id}`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Book\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imageContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: bookItem.url,\n    alt: \"book name\",\n    className: \"bookImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"LeftSection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, bookItem.category), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"Title\",\n    role: \"presentation\",\n    onClick: () => selectedBookHandler(bookItem.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, bookItem.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Writer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, bookItem.author), /*#__PURE__*/React.createElement(CrudButtons, {\n    clicked: clicked,\n    selectedBook: bookItem,\n    history: history,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  deleteBook: data => {\n    dispatch(removeBook(data));\n  },\n  addCurrentBook: bookID => {\n    dispatch(bookFilter(bookID));\n  }\n});\n\nbook.propTypes = {\n  bookItem: PropTypes.instanceOf(Object).isRequired,\n  clicked: PropTypes.func.isRequired\n};\nexport default withRouter(book);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/client/src/components/AdminComponents/Book/Book.js"],"names":["React","withRouter","PropTypes","CrudButtons","bookFilter","book","bookItem","clicked","history","addCurrentBook","selectedBookHandler","id","push","url","category","title","author","mapDispatchToProps","dispatch","deleteBook","data","removeBook","bookID","propTypes","instanceOf","Object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,UAAT,QAA2B,qCAA3B;AACA,OAAO,aAAP;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,OAArB;AAA8BC,EAAAA;AAA9B,CAAD,KAAoD;AAE/D,QAAMC,mBAAmB,GAAGC,EAAE,IAAI;AAChCF,IAAAA,cAAc,CAACE,EAAD,CAAd;AACAH,IAAAA,OAAO,CAACI,IAAR,CAAc,cAAaD,EAAG,EAA9B;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEL,QAAQ,CAACO,GAAnB;AAAwB,IAAA,GAAG,EAAC,WAA5B;AAAwC,IAAA,SAAS,EAAC,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BP,QAAQ,CAACQ,QAApC,CADF,eAEE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAsB,IAAA,IAAI,EAAC,cAA3B;AAA0C,IAAA,OAAO,EAAE,MAAMJ,mBAAmB,CAACJ,QAAQ,CAACK,EAAV,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4FL,QAAQ,CAACS,KAArG,CAFF,eAGE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBT,QAAQ,CAACU,MAAlC,CAHF,eAIE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAET,OAAtB;AAA+B,IAAA,YAAY,EAAED,QAA7C;AAAuD,IAAA,OAAO,EAAEE,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAJF,CADF;AAYD,CAnBD;;AAqBA,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AAEtCC,EAAAA,UAAU,EAAEC,IAAI,IAAI;AAAEF,IAAAA,QAAQ,CAACG,UAAU,CAACD,IAAD,CAAX,CAAR;AAA6B,GAFb;AAItCX,EAAAA,cAAc,EAAEa,MAAM,IAAI;AAAEJ,IAAAA,QAAQ,CAACd,UAAU,CAACkB,MAAD,CAAX,CAAR;AAA8B;AAJpB,CAAL,CAAnC;;AAOAjB,IAAI,CAACkB,SAAL,GAAiB;AACfjB,EAAAA,QAAQ,EAAEJ,SAAS,CAACsB,UAAV,CAAqBC,MAArB,EAA6BC,UADxB;AAEfnB,EAAAA,OAAO,EAAEL,SAAS,CAACyB,IAAV,CAAeD;AAFT,CAAjB;AAIA,eAAezB,UAAU,CAACI,IAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport CrudButtons from '../../CrudButtons/CrudButtons';\nimport { bookFilter } from '../../../redux/actions/book.actions';\nimport './Book.scss';\n\nconst book = ({ bookItem, clicked, history, addCurrentBook }) => {\n\n  const selectedBookHandler = id => {\n    addCurrentBook(id);\n    history.push(`/auth/book/${id}`);\n  }\n\n  return (\n    <div className=\"Book\">\n      <div className=\"imageContainer\">\n        <img src={bookItem.url} alt=\"book name\" className=\"bookImage\" />\n      </div>\n      <div className=\"LeftSection\">\n        <div className=\"Category\">{bookItem.category}</div>\n        <h3 className=\"Title\" role=\"presentation\" onClick={() => selectedBookHandler(bookItem.id)}>{bookItem.title}</h3>\n        <div className=\"Writer\">{bookItem.author}</div>\n        <CrudButtons clicked={clicked} selectedBook={bookItem} history={history} />\n      </div>\n    </div>);\n};\n\nconst mapDispatchToProps = dispatch => ({\n\n  deleteBook: data => { dispatch(removeBook(data)); },\n\n  addCurrentBook: bookID => { dispatch(bookFilter(bookID)) },\n})\n\nbook.propTypes = {\n  bookItem: PropTypes.instanceOf(Object).isRequired,\n  clicked: PropTypes.func.isRequired,\n};\nexport default withRouter(book);\n"]},"metadata":{},"sourceType":"module"}