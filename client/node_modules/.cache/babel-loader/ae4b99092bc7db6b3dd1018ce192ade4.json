{"ast":null,"code":"var _jsxFileName = \"/home/suman/react-projects/redux/my-bookstore/src/container/AdminContainers/BookForm/BooksForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { storage } from '../../../firebase/index';\nimport { createBook } from '../../../redux/actions/index';\nimport './BooksForm.css';\n\nclass BookForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        book\n      } = this.state;\n      const updatedBook = book;\n      updatedBook[event.target.id] = event.target.value;\n      this.setState({\n        book: updatedBook\n      });\n    };\n\n    this.handleFileChange = event => {\n      if (event.target.files[0]) {\n        const {\n          book\n        } = this.state;\n        let updatedBook = book;\n        updatedBook = { ...updatedBook,\n          image: event.target.files[0]\n        };\n        this.setState({\n          book: updatedBook\n        });\n      }\n    };\n\n    this.handleSubmit = () => {\n      const {\n        addBook\n      } = this.props;\n      const {\n        book\n      } = this.state;\n      const uploadImage = storage.ref(`images/${book.image.name}`).put(book.image);\n      uploadImage.on('state_changed', snapshot => {\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        this.setState({\n          progress\n        });\n      }, error => {\n        console.log(error);\n      }, () => {\n        storage.ref('images').child(book.image.name).getDownloadURL().then(bookImageUrl => {\n          const {\n            book\n          } = this.state;\n          const updatedBook = { ...book,\n            url: bookImageUrl\n          };\n          this.setState({\n            book: updatedBook\n          });\n        });\n      });\n      addBook(book);\n    };\n\n    this.state = {\n      book: {\n        isbn: '',\n        title: '',\n        description: '',\n        category: '',\n        genre: '',\n        author: '',\n        publisher: '',\n        price: '',\n        image: '',\n        status: '',\n        url: ''\n      },\n      progress: 0\n    };\n  }\n\n  render() {\n    const {\n      book,\n      progress\n    } = this.state;\n    const {\n      isbn,\n      title,\n      description,\n      category,\n      genre,\n      author,\n      publisher,\n      price,\n      status\n    } = book;\n    const {\n      categories,\n      bookCondition\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Add new to Bookstore\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"isbn\",\n      className: \"Input InputFields\",\n      placeholder: \"ISBN number\",\n      value: isbn,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"Input InputFields Text\",\n      id: \"title\",\n      placeholder: \"Enter Book Title\",\n      type: \"text\",\n      value: title,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"textarea\",\n      id: \"description\",\n      className: \"Input, InputFields, Text\",\n      placeholder: \"Add short description\",\n      value: description,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"Select, InputFields, classes.Text\",\n      id: \"category\",\n      value: category,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, categories.map(option => /*#__PURE__*/React.createElement(\"option\", {\n      key: option,\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, option))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"genre\",\n      className: \"Input InputFields Text\",\n      placeholder: \"Add genre\",\n      value: genre,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"author\",\n      className: \"Input InputFields Text\",\n      placeholder: \"Author please\",\n      value: author,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"publisher\",\n      className: \"Input InputFields Text\",\n      placeholder: \"Publishername\",\n      value: publisher,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      step: \"0.01\",\n      id: \"price\",\n      className: \"Input InputFields Text\",\n      placeholder: \"Enter price\",\n      value: price,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"Select InputFields Text\",\n      id: \"status\",\n      value: status,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, bookCondition.map(option => /*#__PURE__*/React.createElement(\"option\", {\n      key: option,\n      value: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, option))), /*#__PURE__*/React.createElement(\"progress\", {\n      value: progress,\n      max: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleFileChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Button SaveBtn\",\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, \"SAVE BOOK\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addBook: data => {\n    dispatch(createBook(data));\n  }\n});\n\nBookForm.propTypes = {\n  addBook: PropTypes.func.isRequired,\n  categories: PropTypes.instanceOf(Array).isRequired,\n  bookCondition: PropTypes.instanceOf(Array).isRequired\n};\nexport default connect(null, mapDispatchToProps)(BookForm);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/src/container/AdminContainers/BookForm/BooksForm.js"],"names":["React","Component","PropTypes","connect","storage","createBook","BookForm","constructor","props","handleChange","event","book","state","updatedBook","target","id","value","setState","handleFileChange","files","image","handleSubmit","addBook","uploadImage","ref","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","bookImageUrl","url","isbn","title","description","category","genre","author","publisher","price","status","render","categories","bookCondition","map","option","mapDispatchToProps","dispatch","data","propTypes","func","isRequired","instanceOf","Array"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { storage } from '../../../firebase/index';\nimport { createBook } from '../../../redux/actions/index';\nimport './BooksForm.css';\n\nclass BookForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      book: {\n        isbn: '',\n        title: '',\n        description: '',\n        category: '',\n        genre: '',\n        author: '',\n        publisher: '',\n        price: '',\n        image: '',\n        status: '',\n        url: '',\n      },\n      progress: 0,\n    };\n  }\n\n  handleChange = event => {\n    const { book } = this.state;\n    const updatedBook = book;\n    updatedBook[event.target.id] = event.target.value;\n    this.setState({ book: updatedBook });\n  };\n\n  handleFileChange = event => {\n    if (event.target.files[0]) {\n      const { book } = this.state;\n      let updatedBook = book;\n      updatedBook = {\n        ...updatedBook,\n        image: event.target.files[0],\n      };\n      this.setState({ book: updatedBook });\n    }\n  };\n\n  handleSubmit = () => {\n    const { addBook } = this.props;\n    const { book } = this.state;\n    const uploadImage = storage.ref(`images/${book.image.name}`).put(book.image);\n    uploadImage.on('state_changed',\n      snapshot => {\n        const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n        this.setState({ progress });\n      },\n      error => {\n        console.log(error);\n      },\n      () => {\n        storage.ref('images').child(book.image.name).getDownloadURL().then(bookImageUrl => {\n          const { book } = this.state;\n          const updatedBook = {\n            ...book,\n            url: bookImageUrl,\n          };\n          this.setState({ book: updatedBook });\n        });\n      });\n    addBook(book);\n  };\n\n  render() {\n    const { book, progress } = this.state;\n    const {\n      isbn, title, description, category, genre, author, publisher, price, status,\n    } = book;\n    const { categories, bookCondition } = this.props;\n    return (\n      <div className=\"Form\">\n        <h3 className=\"Title\">Add new to Bookstore</h3>\n        <form>\n          <input\n            type=\"number\"\n            id=\"isbn\"\n            className=\"Input InputFields\"\n            placeholder=\"ISBN number\"\n            value={isbn}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            className=\"Input InputFields Text\"\n            id=\"title\"\n            placeholder=\"Enter Book Title\"\n            type=\"text\"\n            value={title}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"textarea\"\n            id=\"description\"\n            className=\"Input, InputFields, Text\"\n            placeholder=\"Add short description\"\n            value={description}\n            onChange={this.handleChange}\n            required\n          />\n          <select\n            className=\"Select, InputFields, classes.Text\"\n            id=\"category\"\n            value={category}\n            onChange={this.handleChange}\n          >\n            {\n              categories.map(option => (\n                <option\n                  key={option}\n                  value={option}\n                >\n                  {option}\n                </option>\n              ))\n            }\n          </select>\n          <input\n            type=\"text\"\n            id=\"genre\"\n            className=\"Input InputFields Text\"\n            placeholder=\"Add genre\"\n            value={genre}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"text\"\n            id=\"author\"\n            className=\"Input InputFields Text\"\n            placeholder=\"Author please\"\n            value={author}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"text\"\n            id=\"publisher\"\n            className=\"Input InputFields Text\"\n            placeholder=\"Publishername\"\n            value={publisher}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"number\"\n            step=\"0.01\"\n            id=\"price\"\n            className=\"Input InputFields Text\"\n            placeholder=\"Enter price\"\n            value={price}\n            onChange={this.handleChange}\n            required\n          />\n          <select\n            className=\"Select InputFields Text\"\n            id=\"status\"\n            value={status}\n            onChange={this.handleChange}\n          >\n            {\n              bookCondition.map(option => (\n                <option\n                  key={option}\n                  value={option}\n                >\n                  {option}\n                </option>\n              ))\n            }\n          </select>\n          <progress value={progress} max=\"100\" />\n          <input\n            type=\"file\"\n            onChange={this.handleFileChange}\n            required\n          />\n          <button\n            className=\"Button SaveBtn\"\n            type=\"button\"\n            onClick={this.handleSubmit}\n          >\n            SAVE BOOK\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addBook: data => { dispatch(createBook(data)); },\n});\n\nBookForm.propTypes = {\n  addBook: PropTypes.func.isRequired,\n  categories: PropTypes.instanceOf(Array).isRequired,\n  bookCondition: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(BookForm);\n"]},"metadata":{},"sourceType":"module"}