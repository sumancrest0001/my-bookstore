{"ast":null,"code":"var _jsxFileName = \"/home/suman/react-projects/redux/my-bookstore/src/container/BookList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classes from './BookList.module.css';\nimport Book from '../components/Book/Book';\nimport CategoryFilter from '../components/CategoryFilter/CategoryFilter';\nimport { removeBook, filterBooks } from '../actions/index';\n\nconst bookList = ({\n  books,\n  deleteBook,\n  selectCategory\n}) => {\n  const handleRemoveBook = book => deleteBook(book);\n\n  const handleFilterChange = event => selectCategory(event.target.value);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CategoryFilter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    className: classes.BookList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Book ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Remove\")), books.map(book => /*#__PURE__*/React.createElement(Book, {\n    key: book.id,\n    bookItem: book,\n    clicked: () => handleRemoveBook(book),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  })))));\n};\n\nbookList.propTypes = {\n  books: PropTypes.instanceOf(Array).isRequired,\n  deleteBook: PropTypes.func.isRequired,\n  selectCategory: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteBook: data => {\n    dispatch(removeBook(data));\n  },\n  selectCategory: category => {\n    dispatch(filterBooks(category));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(bookList);","map":{"version":3,"sources":["/home/suman/react-projects/redux/my-bookstore/src/container/BookList.js"],"names":["React","connect","PropTypes","classes","Book","CategoryFilter","removeBook","filterBooks","bookList","books","deleteBook","selectCategory","handleRemoveBook","book","handleFilterChange","event","target","value","BookList","map","id","propTypes","instanceOf","Array","isRequired","func","mapStateToProps","state","filter","mapDispatchToProps","dispatch","data","category"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,cAAP,MAA2B,6CAA3B;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,UAAT;AAAqBC,EAAAA;AAArB,CAAD,KAA2C;AAC1D,QAAMC,gBAAgB,GAAGC,IAAI,IAAIH,UAAU,CAACG,IAAD,CAA3C;;AACA,QAAMC,kBAAkB,GAAGC,KAAK,IAAIJ,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlD;;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,SAAS,EAAEd,OAAO,CAACe,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF,EAOGT,KAAK,CAACU,GAAN,CAAUN,IAAI,iBACb,oBAAC,IAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACO,EADZ;AAEE,IAAA,QAAQ,EAAEP,IAFZ;AAGE,IAAA,OAAO,EAAE,MAAMD,gBAAgB,CAACC,IAAD,CAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAPH,CADF,CAFF,CADF;AAsBD,CAzBD;;AA2BAL,QAAQ,CAACa,SAAT,GAAqB;AACnBZ,EAAAA,KAAK,EAAEP,SAAS,CAACoB,UAAV,CAAqBC,KAArB,EAA4BC,UADhB;AAEnBd,EAAAA,UAAU,EAAER,SAAS,CAACuB,IAAV,CAAeD,UAFR;AAGnBb,EAAAA,cAAc,EAAET,SAAS,CAACuB,IAAV,CAAeD;AAHZ,CAArB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChClB,EAAAA,KAAK,EAAEkB,KAAK,CAAClB,KADmB;AAEhCmB,EAAAA,MAAM,EAAED,KAAK,CAACC;AAFkB,CAAL,CAA7B;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCpB,EAAAA,UAAU,EAAEqB,IAAI,IAAI;AAAED,IAAAA,QAAQ,CAACxB,UAAU,CAACyB,IAAD,CAAX,CAAR;AAA6B,GADb;AAEtCpB,EAAAA,cAAc,EAAEqB,QAAQ,IAAI;AAAEF,IAAAA,QAAQ,CAACvB,WAAW,CAACyB,QAAD,CAAZ,CAAR;AAAkC;AAF1B,CAAL,CAAnC;;AAKA,eAAe/B,OAAO,CAACyB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrB,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classes from './BookList.module.css';\nimport Book from '../components/Book/Book';\nimport CategoryFilter from '../components/CategoryFilter/CategoryFilter';\nimport { removeBook, filterBooks } from '../actions/index';\n\nconst bookList = ({ books, deleteBook, selectCategory }) => {\n  const handleRemoveBook = book => deleteBook(book);\n  const handleFilterChange = event => selectCategory(event.target.value);\n  return (\n    <div>\n      <CategoryFilter />\n      <table className={classes.BookList}>\n        <tbody>\n          <tr>\n            <th>Book ID</th>\n            <th>Title</th>\n            <th>Category</th>\n            <th>Remove</th>\n          </tr>\n          {books.map(book => (\n            <Book\n              key={book.id}\n              bookItem={book}\n              clicked={() => handleRemoveBook(book)}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nbookList.propTypes = {\n  books: PropTypes.instanceOf(Array).isRequired,\n  deleteBook: PropTypes.func.isRequired,\n  selectCategory: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteBook: data => { dispatch(removeBook(data)); },\n  selectCategory: category => { dispatch(filterBooks(category)); },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(bookList);\n"]},"metadata":{},"sourceType":"module"}